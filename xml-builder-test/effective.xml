<PP xmlns="https://niap-ccevs.org/cc/v1" xmlns:cc="https://niap-ccevs.org/cc/v1" xmlns:sec="https://niap-ccevs.org/cc/v1/section" xmlns:htm="http://www.w3.org/1999/xhtml" boilerplate="yes" target-product="Mobile Device">
 <PPReference>
  <ReferenceTable>
   <PPTitle>Mobile Device Fundamentals</PPTitle>
   <PPVersion>3.3</PPVersion>
   <PPAuthor>National Information Assurance Partnership</PPAuthor>
   <PPPubDate>2022-09-12</PPPubDate>
   <Keywords>??</Keywords>
  </ReferenceTable>
 </PPReference>
 <RevisionHistory>
  <entry>
   <version>1.0</version>
   <date>2013-10-21</date>
   <subject>Initial Release</subject>
  </entry>
  <entry>
   <version>1.1</version>
   <date>2014-01-12</date>
   <subject>Typographical changes and additional clarifications in application notes. Removed<htm:br/>assignment from FCS_TLS_EXT.1 and limited testing to those ciphersuites in both<htm:br/>FCS_TLS_EXT.1 and FCS_TLS_EXT.2.</subject>
  </entry>
  <entry>
   <version>2.0</version>
   <date>2015-09-14</date>
   <subject>Included changes based on Technical Rapid Response Team Decisions. Clarified many<htm:br/>requirements and evaluation activities. Mandated objective requirements:Application Access Control (FDP_ACF_EXT.1.2)VPN Information Flow Control (FDP_IFC_EXT.1) Added new objective requirements:Suite B cryptography for IEEE 802.11Certificate enrollmentProtection of additional key material typesHeap overflow protectionBluetooth requirementsCryptographic operation services for applicationsRemote Attestation (FPT_NOT_EXT.1) Added transition dates for some objective requirements. Included<htm:br/>hardware-isolated REK and key storage selections. Allowed key derivation by<htm:br/>REK. Clarified FTP_ITC_EXT.1 and added FDP_UPC_EXT.1. Mandated HTTPS and<htm:br/>TLS for application use. (FDP_UPC_EXT.1) Removed Dual_EC_DRBG as an approved<htm:br/>DRBG. Adopted new TLS requirements.  Mandated TSF Wipe upon authentication<htm:br/>failure limit and required number of authentication failures be maintained across<htm:br/>reboot. Clarified Management Class. Included more domain isolation<htm:br/>discussion and tests. Updated Audit requirements and added Auditable Events<htm:br/>table. Added SFR Category Mapping Table. Updated Use Case<htm:br/>Templates. Moved Glossary to Introduction.</subject>
  </entry>
  <entry>
   <version>3.0</version>
   <date>2015-09-17</date>
   <subject>Included changes based on Technical Rapid Response Team Decisions. Clarified<htm:br/>many requirements and evaluation activities. Mandated objective requirements:Generation of Audit Records (FAU_GEN.1)Audit Storage Protection (FAU_STG.1)Audit Storage Overwrite (FAU_STG.4)Lock Screen DAR (FDP_DAR_EXT.2)Discard Bluetooth Connection Attempts from Bluetooth Addresses with Existing<htm:br/>Connection (FIA_BLT_EXT.3)JTAG Disablement (FPT_JTA) Added new objective requirements:Application BackupBiometric Authentication FactorAccess ControlUser AuthenticationBluetooth Encryption WLAN client requirements moved to Extended Package for WLAN Client. Added<htm:br/>SFRs to support BYOD Use Case BYOD Use Case Updated key destruction SFR<htm:br/></subject>
  </entry>
  <entry>
   <version>3.1</version>
   <date>2017-04-05</date>
   <subject>Included changes based on Technical Rapid Response Team Decisions and incorporated<htm:br/>Technical Decisions. Modified biometric requirements: FIA_UAU.5 - Added iris, face, voice and vein as supported modalities, in addition<htm:br/>to fingerprint (allowed in version 3)FIA_BMG_EXT.1.1 - Clarified AA to specify that vendor evidence is acceptable and<htm:br/>expectations of evidence provided. FIA_BMG_EXT.1.2 - SAFAR was changed to an assignment of a SAFAR no greater than<htm:br/>1:500. FIA_AFL_EXT.1 - Updated to allow each biometric modality to utilize an individual<htm:br/>or shared counter. FCS_TLSC_EXT.1.1 - Removed TLS ciphersuites that utilized SHA1 and updated<htm:br/>optional ciphersuites to be uniformed across PPs. FCS_STG_EXT.2.2 - Modified to<htm:br/>require long term trusted channel key material be encrypted by an approved method.<htm:br/>FIA_UAU_EXT.1.1 - Modified to allow the long term trusted channel key material to be<htm:br/>available prior to password being entered at start-up.</subject>
  </entry>
  <entry>
   <version>3.2</version>
   <date>2021-04-15</date>
   <subject>Removed TLS SFRs and utilized TLS Functional Package Removed Bluetooth SFRs<htm:br/>and utilized Bluetooth Module. Bluetooth SFR moved to Implementation Dependent.<htm:br/>FPT_TUD_EXT.4.2 renumbered to</subject>
  </entry>
  <entry>
   <version>3.3</version>
   <date>2022-09-12</date>
   <subject>Integrated Biometrics cPP Module, Included changes based on Technical Rapid Response Team Decisions and open issues from GitHub.Removed biometric definitions from Tech TermsRemoved FDP_PBARemoved FIA_BMGUpdated FIA_UAU.5 to support bio cPP moduleMoved FTA_TAB.1 to mandatoryMoved FAU_SAR.1 to mandatoryAdded ECDUpdated WLAN Client reference from Extended Package to ModuleRemoved Diffie-Hellman group 14 selection from FCS_CKM.1.1 and FCS_CKM.2.1/UNLOCKED</subject>
  </entry>
 </RevisionHistory>
 <release-notes><htm:h3>TDs Applied</htm:h3></release-notes><include-pkg id="pkg-tls">
  <git>
   <url>https://github.com/commoncriteria/tls</url>
   <branch>release-1.1</branch>
  </git>
  <url>https://www.niap-ccevs.org/Profile/Info.cfm?PPID=439&amp;id=439</url>
 </include-pkg>
 <modules>
  <module id="mod-vpnclient">
   <git>
    <url>https://github.com/commoncriteria/vpnclient</url>
    <branch>v2.4</branch>
   </git>
   <url/>
  </module>
  <module id="mod-bluetooth">
   <git>
    <url>https://github.com/commoncriteria/bluetooth</url>
    <branch>v1.0</branch>
   </git>
   <url/>
  </module>
  <module id="mod-mdmagent">
   <git>
    <url>https://github.com/commoncriteria/mdmagent</url>
    <branch>Release-1.0</branch>
   </git>
   <url/>
  </module>
  <module id="mod-wlanclient">
   <git>
    <url>https://github.com/commoncriteria/wlanclient</url>
    <branch>release-1.0</branch>
   </git>
   <url/>
  </module>
  <module id="mod-biometrics" name="Biometric Enrollment and Verification" product="Biometric Devices" short="Biometric cPP" version="1.1">
   <url>https://github.com/biometricITC/cPP-biometrics/blob/master/Protection%20Profile/BiocPP.adoc</url>
  </module>
 </modules>
 <pp-preferences/>
 <sec:Introduction>
  <sec:Objectives_of_Document>The scope of this Protection Profile (PP) is to describe the security functionality of mobile devices in terms of [CC] and to define functional and assurance requirements for such devices.</sec:Objectives_of_Document>
  <cc:tech-terms/>
  <section title="Compliant Targets of Evaluation" id="TOEdescription">This assurance standard specifies information security requirements for Mobile Devices for use in an enterprise. A Mobile Device in the context of this assurance standard is a device, which is composed of a hardware platform and its system software. The device typically provides wireless connectivityand may include software for functions like secure messaging, email, web, VPN connection, and VoIP (Voice over IP), for access to the protected enterprise network, enterprise data and applications, and for communicating to other Mobile Devices.<htm:br/><htm:br/> <xref to="NetEnv"/>illustrates the network operating environment of the Mobile Device.<htm:br/><htm:br/> <figure entity="images/figure1.jpg" title="Mobile Device Network Environment" id="NetEnv"/><htm:br/><htm:br/>Examples of a "Mobile Device" that should claim conformance to this Protection Profile include smartphones, tablet computers, and other Mobile Devices with similar capabilities.<htm:br/><htm:br/>The Mobile Device provides essential services, such as cryptographic services, data-at-rest protection, and key storage services to support the secure operation of applications on the device. Additional security features such as security policy enforcement, application mandatory access control, anti-exploitation features, user authentication, and software integrity protection are implemented in order to address threats.<htm:br/><htm:br/>This assurance standard describes these essential security services provided by the Mobile Device and serves as a foundation for a secure mobile architecture. The wireless connectivity shall be validated against the <xref to="mod-wlanclient"/>. If the mobile device contains Bluetooth functionality (i.e., has Bluetooth hardware), the Bluetooth connectivity shall be evaluated against the <xref to="mod-bluetooth"/>. As illustrated in <xref to="TOE"/>, it is expected that a typical deployment would also include either third-party or bundled components. Whether these components are bundled as part of the Mobile Device by the manufacturer or developed by a third-party, they must be separately validated against the related assurance standards such as the PP-Module for MDM Agent, PP-Module for VPN Client, PP-Module for VVoIP, and cPP-Module for Biometrics. It is the responsibility of the architect of the overall secure mobile architecture to ensure validation of these components. Additional applications that may come pre-installed on the Mobile Device that are not validated are considered to be potentially flawed, but not malicious. Examples include email client and web browser.<htm:br/><htm:br/> <figure entity="images/figure2.jpg" title="Optional Additional Mobile Device Components" id="TOE"/><htm:br/></section>
  <sec:Use_Cases/>
 </sec:Introduction>
 <sec:Conformance_Claims/>
 <!-- 3.0 Security Problem Definition-->
 <sec:Security_Problem_Definition>
  <!-- 3.1 Threats -->
  <sec:Threats>
   <threats/>
  </sec:Threats>
  <!-- 3.2 Assumptions -->
  <sec:Assumptions>
   <assumptions/>
  </sec:Assumptions>
  <!-- 3.3 Organizational Security Policies -->
  <sec:Organizational_Security_Policies>
   <OSPs/>
  </sec:Organizational_Security_Policies>
 </sec:Security_Problem_Definition>
 <!-- 4.0 Security Objectives -->
 <sec:Security_Objectives>
  <!-- 4.1 Security Objectives for the TOE -->
  <sec:Security_Objectives_for_the_TOE>
   <SOs/>
  </sec:Security_Objectives_for_the_TOE>
  <!-- 4.2 Security Objctives for the Operational Environment -->
  <sec:Security_Objectives_for_the_Operational_Environment>
   <SOEs/>
  </sec:Security_Objectives_for_the_Operational_Environment>
  <!-- 4.3 Security Objectives Rationale -->
  <sec:Security_Objectives_Rationale/>
 </sec:Security_Objectives>
 <!-- 5.0 Security Requirements -->
 <sec:req title="Security Requirements">
  <!-- 5.1 Security Functional Requirements-->
  <sec:SFRs title="Security Functional Requirements">
   <!--5.1.1 Class: Security Audit (FAU)-->
   <section id="fau" title="Class: Security Audit (FAU)">
    <!--FCS_CKM_EXT.5 TSF Wipe-->
    <f-component cc-id="fcs_ckm_ext.5" id="fcs-ckm-ext-5" name="TSF Wipe">
     <comp-lev> requires the TSF to implement a cryptographic or other mechanism to make TSF data unreadable.</comp-lev>
     <management>The following actions could be considered for the management functions in FMT:
          TSF wipe of protected data.TSF wipe of enterprise data.</management>
     <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST:
          Failure of the wipe.</audit>
     <dependencies>FCS_RBG_EXT.1 Random Bit Generation</dependencies>
     <f-element id="fel-wipe-how">
      <title>The TSF shall wipe all protected data by<selectables linebreak="yes"><selectable id="fcs_ckm_ext.5.1_1">Cryptographically erasing the encrypted DEKs or the KEKs in non-volatile memory by following the requirements in FCS_CKM_EXT.4.1</selectable><selectable id="fcs_ckm_ext.5.1_2">Overwriting all PD according to the following rules: <htm:ul><htm:li>For EEPROM, the destruction shall be executed by a single direct overwrite consisting of a pseudo random pattern using the TSF’s RBG (as specified in FCS_RBG_EXT.1, followed by a read-verify. </htm:li><htm:li>For flash memory, that is not wear-leveled, the destruction shall be executed<selectables><selectable id="fcs_ckm_ext.5.1_3">by a single direct overwrite consisting of zeros followed by a read-verify</selectable><selectable id="fcs_ckm_ext.5.1_4">by a block erase that erases the reference to memory that stores data as well as the data itself</selectable></selectables>. </htm:li><htm:li>For flash memory, that is wear-leveled, the destruction shall be executed<selectables><selectable id="fcs_ckm_ext.5.1_5">by a single direct overwrite consisting of zeros</selectable><selectable id="fcs_ckm_ext.5.1_6">by a block erase</selectable></selectables>. </htm:li><htm:li>For non-volatile memory other than EEPROM and flash, the destruction shall be executed by a single direct overwrite with a random pattern that is changed before each write. </htm:li></htm:ul></selectable> </selectables>.</title>
      <note role="application">Protected data is all non-TSF data, including all user or enterprise data. Some or all of this data may be considered sensitive data as well.</note>
      <aactivity level="component">
       <TSS>The evaluator shall check to ensure the TSS describes how the device is wiped, the type of clearing procedure that is performed (cryptographic erase or overwrite) and, if overwrite is performed, the overwrite procedure (overwrite with zeros, overwrite three or more times by a different alternating pattern, overwrite with random pattern, or block erase).<htm:br/><htm:br/>If different types of memory are used to store the data to be protected, the evaluator shall check to ensure that the TSS describes the clearing procedure in terms of the memory in which the data are stored (for example, data stored on flash are cleared by overwriting once with zeros, while data stored on the internal persistent storage device are cleared by overwriting three times with a random pattern that is changed before each write).<htm:br/><htm:br/></TSS>
       <Guidance>The evaluator shall verify that the AGD guidance describes how to enable encryption, if it is not enabled by default. Additionally the evaluator shall verify that the AGD guidance describes how to initiate the wipe command.<htm:br/><htm:br/></Guidance>
       <Tests>
        Evaluation Activity Note: The following test may require the developer to provide access to a test platform that provides the evaluator with tools that are typically not found on consumer Mobile Device products.
        <testlist>
         <test>
          The evaluator shall perform one of the following tests. The test before and after the wipe command shall be identical. This test shall be repeated for each type of memory used to store the data to be protected.
          <testlist>
           <htm:p>For File-based Methods:The evaluator shall enable encryption according to the AGD guidance. The evaluator shall create a user data (protected data or sensitive data) file, for example, by using an application. The evaluator shall use a tool provided by the developer to examine this data stored in memory (for example, by examining a decrypted files). The evaluator shall initiate the wipe command according to the AGD guidance provided for FMT_SMF.1. The evaluator shall use a tool provided by the developer to examine the same data location in memory to verify that the data has been wiped according to the method described in the TSS (for example, the files are still encrypted and cannot be accessed). dfkl</htm:p>
          </testlist>
          <testlist>For Volume-based Methods:The evaluator shall enable encryption according to the AGD guidance. The evaluator shall create a unique data string, for example, by using an application. The evaluator shall use a tool provided by the developer to search decrypted data for the unique string. The evaluator shall initiate the wipe command according to the AGD guidance provided for FMT_SMF.1. The evaluator shall use a tool provided by the developer to search for the same unique string in decrypted memory to verify that the data has been wiped according to the method described in the TSS (for example, the files are still encrypted and cannot be accessed). </testlist>
         </test>
         <test>The evaluator shall cause the device to wipe and verify that the wipe concludes with a power cycle. </test>
        </testlist>
       </Tests>
      </aactivity>
     </f-element>
     <f-element id="fel-wipe-power">
      <title>The TSF shall perform a power cycle on conclusion of the wipe procedure.</title>
     </f-element>
    </f-component>
    <!--FCS_COP.1/ENCRYPT Cryptographic Operation-->
    <f-component cc-id="fcs_cop.1" id="fcs-cop-1-encrypt" name="Cryptographic Operation" iteration="ENCRYPT">
     <f-element id="fel-crypt-how">
      <title>The TSF shall perform [ <htm:i>encryption/decryption</htm:i>  ] in accordance with a specified cryptographic algorithm: [  <htm:i><htm:br/><htm:ul><htm:li>AES-CBC (as defined in FIPS PUB 197, and NIST SP 800-38A) mode</htm:li><htm:li>AES-CCMP (as defined in FIPS PUB 197, NIST SP 800-38C and IEEE 802.11-2012), and</htm:li><htm:li><selectables linebreak="yes"><selectable id="fcs_cop.1.1_ENCRYPT_1">AES Key Wrap (KW) (as defined in NIST SP 800-38F)</selectable><selectable id="fcs_cop.1.1_ENCRYPT_2">AES Key Wrap with Padding (KWP) (as defined in NIST SP 800-38F)</selectable><selectable id="fcs_cop.1.1_ENCRYPT_3">AES-GCM (as defined in NIST SP 800-38D)</selectable><selectable id="fcs_cop.1.1_ENCRYPT_4">AES-CCM (as defined in NIST SP 800-38C)</selectable><selectable id="fcs_cop.1.1_ENCRYPT_5">AES-XTS (as defined in NIST SP 800-38E) mode</selectable><selectable id="fcs_cop.1.1_ENCRYPT_6">AES-CCMP-256 (as defined in NIST SP800-38C and IEEE 802.11ac-2013)</selectable><selectable id="fcs_cop.1.1_ENCRYPT_7">AES-GCMP-256 (as defined in NIST SP800-38D and IEEE 802.11ac-2013)</selectable><selectable id="fcs_cop.1.1_ENCRYPT_8" exclusive="yes">no other modes</selectable> </selectables></htm:li></htm:ul></htm:i>  ] and cryptographic key sizes [  <htm:i>128-bit key sizes and<selectables><selectable id="s-encrypt-256">256-bit key sizes</selectable><selectable id="fcs_cop.1.1_ENCRYPT_9" exclusive="yes">no other key sizes</selectable> </selectables></htm:i>  ].</title>
      <note role="application">For the first selection, the ST author should choose the mode or modes in which AES operates. For the second selection, the ST author should choose the key sizes that are supported by this functionality. 128-bit CBC and CCMP are required in order to comply with the <xref to="mod-wlanclient"/>.<htm:br/><htm:br/>Note that to comply with the <xref to="mod-wlanclient"/>, AES CCMP (which uses AES in CCM as specified in SP 800-38C) with cryptographic key size of 128 bits must be implemented. If CCM is only implemented to support CCMP for WLAN, AES-CCM does not need be selected. Optionally, AES-CCMP-256 or AES-GCMP-256 with cryptographic key size of 256 bits may be implemented.</note>
      <aactivity level="component">
       <TSS>There are no TSS evaluation activities for this component.<htm:br/><htm:br/></TSS>
       <Guidance>There are no guidance evaluation activities for this component.<htm:br/><htm:br/></Guidance>
       <Tests>
        Evaluation Activity Note: The following tests require the developer to provide access to a test platform that provides the evaluator with tools that are typically not found on factory products.
        <testlist>
         <test>
          AES-CBC Known Answer Tests There are four Known Answer Tests (KATs), described below. In all KATs, the plaintext, ciphertext, and IV values shall be 128-bit blocks. The results from each test may either be obtained by the evaluator directly or by supplying the inputs to the implementer and receiving the results in response. To determine correctness, the evaluator shall compare the resulting values to those obtained by submitting the same inputs to a known good implementation. AES-CBC Known Answer Tests There are four Known Answer Tests (KATs), described below. In all KATs, the plaintext, ciphertext, and IV values shall be 128-bit blocks. The results from each test may either be obtained by the evaluator directly or by supplying the inputs to the implementer and receiving the results in response. To determine correctness, the evaluator shall compare the resulting values to those obtained by submitting the same inputs to a known good implementation.
          <testlist>KAT-1. To test the encrypt functionality of AES-CBC, the evaluator shall supply a set of 10 plaintext values and obtain the ciphertext value that results from AES-CBC encryption of the given plaintext using a key value of all zeros and an IV of all zeros. Five plaintext values shall be encrypted with a 128-bit all-zeros key, and the other five shall be encrypted with a 256-bit all-zeros key. To test the decrypt functionality of AES-CBC, the evaluator shall perform the same test as for encrypt, using 10 ciphertext values as input and AES-CBC decryption. KAT-1. To test the encrypt functionality of AES-CBC, the evaluator shall supply a set of 10 plaintext values and obtain the ciphertext value that results from AES-CBC encryption of the given plaintext using a key value of all zeros and an IV of all zeros. Five plaintext values shall be encrypted with a 128-bit all-zeros key, and the other five shall be encrypted with a 256-bit all-zeros key. To test the decrypt functionality of AES-CBC, the evaluator shall perform the same test as for encrypt, using 10 ciphertext values as input and AES-CBC decryption. </testlist>
          <testlist>KAT-2. To test the encrypt functionality of AES-CBC, the evaluator shall supply a set of 10 key values and obtain the ciphertext value that results from AES-CBC encryption of an all-zeros plaintext using the given key value and an IV of all zeros. Five of the keys shall be 128-bit keys, and the other five shall be 256-bit keys. To test the decrypt functionality of AES-CBC, the evaluator shall perform the same test as for encrypt, using an all-zero ciphertext value as input and AES-CBC decryption. KAT-2. To test the encrypt functionality of AES-CBC, the evaluator shall supply a set of 10 key values and obtain the ciphertext value that results from AES-CBC encryption of an all-zeros plaintext using the given key value and an IV of all zeros. Five of the keys shall be 128-bit keys, and the other five shall be 256-bit keys. To test the decrypt functionality of AES-CBC, the evaluator shall perform the same test as for encrypt, using an all-zero ciphertext value as input and AES-CBC decryption. </testlist>
          <testlist>KAT-3. To test the encrypt functionality of AES-CBC, the evaluator shall supply the two sets of key values described below and obtain the ciphertext value that results from AES encryption of an all-zeros plaintext using the given key value and an IV of all zeros. The first set of keys shall have 128 128-bit keys, and the second set shall have 256 256-bit keys. Key i in each set shall have the leftmost i bits be ones and the rightmost N-i bits be zeros, for i in [1,N]. To test the decrypt functionality of AES-CBC, the evaluator shall supply the two sets of key and ciphertext value pairs described below and obtain the plaintext value that results from AES-CBC decryption of the given ciphertext using the given key and an IV of all zeros. The first set of key or ciphertext pairs shall have 128 128-bit key or ciphertext pairs, and the second set of key or ciphertext pairs shall have 256 256-bit key or ciphertext pairs. Key i in each set shall have the leftmost i bits be ones and the rightmost N-i bits be zeros, for i in [1,N]. The ciphertext value in each pair shall be the value that results in an all-zeros plaintext when decrypted with its corresponding key. KAT-3. To test the encrypt functionality of AES-CBC, the evaluator shall supply the two sets of key values described below and obtain the ciphertext value that results from AES encryption of an all-zeros plaintext using the given key value and an IV of all zeros. The first set of keys shall have 128 128-bit keys, and the second set shall have 256 256-bit keys. Key i in each set shall have the leftmost i bits be ones and the rightmost N-i bits be zeros, for i in [1,N]. To test the decrypt functionality of AES-CBC, the evaluator shall supply the two sets of key and ciphertext value pairs described below and obtain the plaintext value that results from AES-CBC decryption of the given ciphertext using the given key and an IV of all zeros. The first set of key or ciphertext pairs shall have 128 128-bit key or ciphertext pairs, and the second set of key or ciphertext pairs shall have 256 256-bit key or ciphertext pairs. Key i in each set shall have the leftmost i bits be ones and the rightmost N-i bits be zeros, for i in [1,N]. The ciphertext value in each pair shall be the value that results in an all-zeros plaintext when decrypted with its corresponding key. </testlist>
          <testlist>KAT-4. To test the encrypt functionality of AES-CBC, the evaluator shall supply the set of 128 plaintext values described below and obtain the two ciphertext values that result from AES-CBC encryption of the given plaintext using a 128-bit key value of all zeros with an IV of all zeros and using a 256-bit key value of all zeros with an IV of all zeros, respectively. Plaintext value i in each set shall have the leftmost i bits be ones and the rightmost 128-i bits be zeros, for i in [1,128]. To test the decrypt functionality of AES-CBC, the evaluator shall perform the same test as for encrypt, using ciphertext values of the same form as the plaintext in the encrypt test as input and AES-CBC decryption. KAT-4. To test the encrypt functionality of AES-CBC, the evaluator shall supply the set of 128 plaintext values described below and obtain the two ciphertext values that result from AES-CBC encryption of the given plaintext using a 128-bit key value of all zeros with an IV of all zeros and using a 256-bit key value of all zeros with an IV of all zeros, respectively. Plaintext value i in each set shall have the leftmost i bits be ones and the rightmost 128-i bits be zeros, for i in [1,128]. To test the decrypt functionality of AES-CBC, the evaluator shall perform the same test as for encrypt, using ciphertext values of the same form as the plaintext in the encrypt test as input and AES-CBC decryption. </testlist>
         </test>
         <test>AES-CBC Multi-Block Message Test The evaluator shall test the encrypt functionality by encrypting an i-block message where 1 &lt; i &lt;= 10. The evaluator shall choose a key, an IV and plaintext message of length i blocks and encrypt the message, using the mode to be tested, with the chosen key and IV. The ciphertext shall be compared to the result of encrypting the same plaintext message with the same key and IV using a known good implementation. The evaluator shall also test the decrypt functionality for each mode by decrypting an i-block message where 1 &lt; i &lt;= 10. The evaluator shall choose a key, an IV and a ciphertext message of length i blocks and decrypt the message, using the mode to be tested, with the chosen key and IV. The plaintext shall be compared to the result of decrypting the same ciphertext message with the same key and IV using a known good implementation. AES-CBC Multi-Block Message Test The evaluator shall test the encrypt functionality by encrypting an i-block message where 1 &lt; i &lt;= 10. The evaluator shall choose a key, an IV and plaintext message of length i blocks and encrypt the message, using the mode to be tested, with the chosen key and IV. The ciphertext shall be compared to the result of encrypting the same plaintext message with the same key and IV using a known good implementation. The evaluator shall also test the decrypt functionality for each mode by decrypting an i-block message where 1 &lt; i &lt;= 10. The evaluator shall choose a key, an IV and a ciphertext message of length i blocks and decrypt the message, using the mode to be tested, with the chosen key and IV. The plaintext shall be compared to the result of decrypting the same ciphertext message with the same key and IV using a known good implementation. AES-CBC Multi-Block Message Test The evaluator shall test the encrypt functionality by encrypting an i-block message where 1 &lt; i &lt;= 10. The evaluator shall choose a key, an IV and plaintext message of length i blocks and encrypt the message, using the mode to be tested, with the chosen key and IV. The ciphertext shall be compared to the result of encrypting the same plaintext message with the same key and IV using a known good implementation. The evaluator shall also test the decrypt functionality for each mode by decrypting an i-block message where 1 &lt; i &lt;= 10. The evaluator shall choose a key, an IV and a ciphertext message of length i blocks and decrypt the message, using the mode to be tested, with the chosen key and IV. The plaintext shall be compared to the result of decrypting the same ciphertext message with the same key and IV using a known good implementation. </test>
         <test>AES-CBC Monte Carlo Tests The evaluator shall test the encrypt functionality using a set of 200 plaintext, IV, and key 3-tuples. 100 of these shall use 128 bit keys, and 100 shall use 256 bit keys. The plaintext and IV values shall be 128-bit blocks. For each 3-tuple, 1000 iterations shall be run as follows: The ciphertext computed in the 1000 iteration (i.e. CT[1000]) is the result for that trial. This result shall be compared to the result of running 1000 iterations with the same values using a known good implementation. The evaluator shall test the decrypt functionality using the same test as for encrypt, exchanging CT and PT and replacing AES-CBC-Encrypt with AES-CBC-Decrypt. AES-CBC Monte Carlo Tests The evaluator shall test the encrypt functionality using a set of 200 plaintext, IV, and key 3-tuples. 100 of these shall use 128 bit keys, and 100 shall use 256 bit keys. The plaintext and IV values shall be 128-bit blocks. For each 3-tuple, 1000 iterations shall be run as follows: The ciphertext computed in the 1000 iteration (i.e. CT[1000]) is the result for that trial. This result shall be compared to the result of running 1000 iterations with the same values using a known good implementation. The evaluator shall test the decrypt functionality using the same test as for encrypt, exchanging CT and PT and replacing AES-CBC-Encrypt with AES-CBC-Decrypt. # Input: PT, IV, Key for i = 1 to 1000: if i == 1: CT[1] = AES-CBC-Encrypt(Key, IV, PT) PT = IV else: CT[i] = AES-CBC-Encrypt(Key, PT) PT = CT[i-1]AES-CBC Monte Carlo Tests The evaluator shall test the encrypt functionality using a set of 200 plaintext, IV, and key 3-tuples. 100 of these shall use 128 bit keys, and 100 shall use 256 bit keys. The plaintext and IV values shall be 128-bit blocks. For each 3-tuple, 1000 iterations shall be run as follows: The ciphertext computed in the 1000 iteration (i.e. CT[1000]) is the result for that trial. This result shall be compared to the result of running 1000 iterations with the same values using a known good implementation. The evaluator shall test the decrypt functionality using the same test as for encrypt, exchanging CT and PT and replacing AES-CBC-Encrypt with AES-CBC-Decrypt. thAES-CBC Monte Carlo Tests The evaluator shall test the encrypt functionality using a set of 200 plaintext, IV, and key 3-tuples. 100 of these shall use 128 bit keys, and 100 shall use 256 bit keys. The plaintext and IV values shall be 128-bit blocks. For each 3-tuple, 1000 iterations shall be run as follows: The ciphertext computed in the 1000 iteration (i.e. CT[1000]) is the result for that trial. This result shall be compared to the result of running 1000 iterations with the same values using a known good implementation. The evaluator shall test the decrypt functionality using the same test as for encrypt, exchanging CT and PT and replacing AES-CBC-Encrypt with AES-CBC-Decrypt. AES-CBC Monte Carlo Tests The evaluator shall test the encrypt functionality using a set of 200 plaintext, IV, and key 3-tuples. 100 of these shall use 128 bit keys, and 100 shall use 256 bit keys. The plaintext and IV values shall be 128-bit blocks. For each 3-tuple, 1000 iterations shall be run as follows: The ciphertext computed in the 1000 iteration (i.e. CT[1000]) is the result for that trial. This result shall be compared to the result of running 1000 iterations with the same values using a known good implementation. The evaluator shall test the decrypt functionality using the same test as for encrypt, exchanging CT and PT and replacing AES-CBC-Encrypt with AES-CBC-Decrypt. </test>
        </testlist>
        <testlist>
         <test>
          The evaluator shall test the generation-encryption and decryption-verification functionality of AES-CCM for the following input parameter and tag lengths: To test the generation-encryption functionality of AES-CCM, the evaluator shall perform the following four tests: To determine correctness in each of the above tests, the evaluator shall compare the ciphertext with the result of generation-encryption of the same inputs with a known good implementation. To test the decryption-verification functionality of AES-CCM, for EACH combination of supported associated data length, payload length, nonce length and tag length, the evaluator shall supply a key value and 15 nonce, associated data and ciphertext 3-tuples and obtain either a FAIL result or a PASS result with the decrypted payload. The evaluator shall supply 10 tuples that should FAIL and 5 that should PASS per set of 15.
          <htm:li>
           <htm:b>128 bit and 256 bit keys</htm:b>
          </htm:li>
          <htm:br/>
          <htm:li><htm:b>Two payload lengths.</htm:b>One payload length shall be the shortest supported payload length, greater than or equal to zero bytes. The other payload length shall be the longest supported payload length, less than or equal to 32 bytes (256 bits).</htm:li>
          <htm:br/>
          <htm:li><htm:b>Two or three associated data lengths.</htm:b>One associated data length shall be 0, if supported. One associated data length shall be the shortest supported payload length, greater than or equal to zero bytes. One associated data length shall be the longest supported payload length, less than or equal to 32 bytes (256 bits). If the implementation supports an associated data length of 2<htm:sup>16</htm:sup>bytes, an associated data length of 2<htm:sup>16</htm:sup>bytes shall be tested.</htm:li>
          <htm:br/>
          <htm:li><htm:b>Nonce lengths.</htm:b>All supported nonce lengths between 7 and 13 bytes, inclusive, shall be tested.</htm:li>
          <htm:br/>
          <htm:li><htm:b>Tag lengths.</htm:b>All supported tag lengths of 4, 6, 8, 10, 12, 14 and 16 bytes shall be tested.</htm:li>
          The evaluator shall test the generation-encryption and decryption-verification functionality of AES-CCM for the following input parameter and tag lengths: To test the generation-encryption functionality of AES-CCM, the evaluator shall perform the following four tests: To determine correctness in each of the above tests, the evaluator shall compare the ciphertext with the result of generation-encryption of the same inputs with a known good implementation. To test the decryption-verification functionality of AES-CCM, for EACH combination of supported associated data length, payload length, nonce length and tag length, the evaluator shall supply a key value and 15 nonce, associated data and ciphertext 3-tuples and obtain either a FAIL result or a PASS result with the decrypted payload. The evaluator shall supply 10 tuples that should FAIL and 5 that should PASS per set of 15. The evaluator shall test the generation-encryption and decryption-verification functionality of AES-CCM for the following input parameter and tag lengths: To test the generation-encryption functionality of AES-CCM, the evaluator shall perform the following four tests: To determine correctness in each of the above tests, the evaluator shall compare the ciphertext with the result of generation-encryption of the same inputs with a known good implementation. To test the decryption-verification functionality of AES-CCM, for EACH combination of supported associated data length, payload length, nonce length and tag length, the evaluator shall supply a key value and 15 nonce, associated data and ciphertext 3-tuples and obtain either a FAIL result or a PASS result with the decrypted payload. The evaluator shall supply 10 tuples that should FAIL and 5 that should PASS per set of 15. The evaluator shall test the generation-encryption and decryption-verification functionality of AES-CCM for the following input parameter and tag lengths: To test the generation-encryption functionality of AES-CCM, the evaluator shall perform the following four tests: To determine correctness in each of the above tests, the evaluator shall compare the ciphertext with the result of generation-encryption of the same inputs with a known good implementation. To test the decryption-verification functionality of AES-CCM, for EACH combination of supported associated data length, payload length, nonce length and tag length, the evaluator shall supply a key value and 15 nonce, associated data and ciphertext 3-tuples and obtain either a FAIL result or a PASS result with the decrypted payload. The evaluator shall supply 10 tuples that should FAIL and 5 that should PASS per set of 15.
          <testlist>For EACH supported key and associated data length and ANY supported payload, nonce and tag length, the evaluator shall supply one key value, one nonce value and 10 pairs of associated data and payload values and obtain the resulting ciphertext. </testlist>
          <testlist>For EACH supported key and payload length and ANY supported associated data, nonce and tag length, the evaluator shall supply one key value, one nonce value and 10 pairs of associated data and payload values and obtain the resulting ciphertext. </testlist>
          <testlist>For EACH supported key and nonce length and ANY supported associated data, payload and tag length, the evaluator shall supply one key value and 10 associated data, payload and nonce value 3-tuples and obtain the resulting ciphertext. </testlist>
          <testlist>For EACH supported key and tag length and ANY supported associated data, payload and nonce length, the evaluator shall supply one key value, one nonce value and 10 pairs of associated data and payload values and obtain the resulting ciphertext. </testlist>
         </test>
        </testlist>
        <testlist>
         <test>The evaluator shall test the encrypt functionality using a set of 10 key, plaintext, AAD, and IV tuples for each combination of parameter lengths above and obtain the ciphertext value and tag that results from AES-GCM authenticated encrypt. Each supported tag length shall be tested at least once per set of 10. The IV value may be supplied by the evaluator or the implementation being tested, as long as it is known. </test>
         <test>The evaluator shall test the decrypt functionality using a set of 10 key, ciphertext, tag, AAD, and IV 5-tuples for each combination of parameter lengths above and obtain a Pass/Fail result on authentication and the decrypted plaintext if Pass. The set shall include five tuples that Pass and five that Fail. </test>
        </testlist>
        <testlist>
         <test>The evaluator shall test the encrypt functionality of XTS-AES for each combination of the following input parameter lengths: using a set of 100 (key, plaintext and 128-bit random tweak value) 3-tuples and obtain the ciphertext that results from XTS-AES encrypt. The evaluator may supply a data unit sequence number instead of the tweak value if the implementation supports it. The data unit sequence number is a base-10 number ranging between 0 and 255 that implementations convert to a tweak value internally. <htm:li><htm:b>256 bit (for AES-128) and 512 bit (for AES-256) keys</htm:b></htm:li><htm:br/><htm:li><htm:b>Three data unit (i.e. plaintext) lengths.</htm:b>One of the data unit lengths shall be a non-zero integer multiple of 128 bits, if supported. One of the data unit lengths shall be an integer multiple of 128 bits, if supported. The third data unit length shall be either the longest supported data unit length or 216 bits, whichever is smaller.</htm:li><htm:br/>The evaluator shall test the encrypt functionality of XTS-AES for each combination of the following input parameter lengths: using a set of 100 (key, plaintext and 128-bit random tweak value) 3-tuples and obtain the ciphertext that results from XTS-AES encrypt. The evaluator may supply a data unit sequence number instead of the tweak value if the implementation supports it. The data unit sequence number is a base-10 number ranging between 0 and 255 that implementations convert to a tweak value internally. The evaluator shall test the encrypt functionality of XTS-AES for each combination of the following input parameter lengths: using a set of 100 (key, plaintext and 128-bit random tweak value) 3-tuples and obtain the ciphertext that results from XTS-AES encrypt. The evaluator may supply a data unit sequence number instead of the tweak value if the implementation supports it. The data unit sequence number is a base-10 number ranging between 0 and 255 that implementations convert to a tweak value internally. </test>
         <test>The evaluator shall test the decrypt functionality of XTS-AES using the same test as for encrypt, replacing plaintext values with ciphertext values and XTS-AES encrypt with XTS-AES decrypt. </test>
        </testlist>
        <testlist>
         <test>The evaluator shall test the authenticated encryption functionality of AES-KW for EACH combination of the following input parameter lengths: using a set of 100 key and plaintext pairs and obtain the ciphertext that results from AES-KW authenticated encryption. To determine correctness, the evaluator shall use the AES-KW authenticated-encryption function of a known good implementation. <htm:li><htm:b>128 and 256 bit key encryption keys (KEKs)</htm:b></htm:li><htm:br/><htm:li><htm:b>Three plaintext lengths.</htm:b>One of the plaintext lengths shall be two semi-blocks (128 bits). One of the plaintext lengths shall be three semi-blocks (192 bits). The third data unit length shall be the longest supported plaintext length less than or equal to 64 semi-blocks (4096 bits).</htm:li>The evaluator shall test the authenticated encryption functionality of AES-KW for EACH combination of the following input parameter lengths: using a set of 100 key and plaintext pairs and obtain the ciphertext that results from AES-KW authenticated encryption. To determine correctness, the evaluator shall use the AES-KW authenticated-encryption function of a known good implementation. </test>
         <test>The evaluator shall test the authenticated-decryption functionality of AES-KW using the same test as for authenticated-encryption, replacing plaintext values with ciphertext values and AES-KW authenticated-encryption with AES-KW authenticated-decryption. </test>
         <test>The evaluator shall test the authenticated-encryption functionality of AES-KWP using the same test as for AES-KW authenticated-encryption with the following change in the three plaintext lengths: <htm:li>One plaintext length shall be one octet. One plaintext length shall be 20 octets (160 bits).</htm:li><htm:br/><htm:li>One plaintext length shall be the longest supported plaintext length less than or equal to 512 octets (4096 bits).</htm:li></test>
         <test>The evaluator shall test the authenticated-decryption functionality of AES-KWP using the same test as for AES-KWP authenticated-encryption, replacing plaintext values with ciphertext values and AES-KWP authenticated-encryption with AES-KWP authenticated-decryption. </test>
        </testlist>
       </Tests>
      </aactivity>
     </f-element>
    </f-component>
    <!--FCS_COP.1/SIGN Cryptographic Operation-->
    <f-component cc-id="fcs_cop.1" id="fcs-cop-1-sign" name="Cryptographic Operation" iteration="SIGN">
     <f-element id="fel-sign-how">
      <title>The TSF shall perform [ <htm:i>cryptographic signature services (generation and verification)</htm:i>  ] in accordance with a specified cryptographic algorithm<selectables linebreak="yes"><selectable id="s-sign-rsa">[<htm:i>RSA schemes</htm:i>] <htm:b>using</htm:b> cryptographic key sizes of [<htm:i>2048-bit or greater</htm:i>] that meet the following: [<htm:i>FIPS PUB 186-4, "Digital Signature Standard (DSS)", Section 4</htm:i>]</selectable><selectable id="s-sign-ecdsa">[<htm:i>ECDSA schemes</htm:i>] <htm:b>using</htm:b> [<htm:i>"NIST curves" P-384 and<selectables><selectable id="fcs_cop.1.1_SIGN_1">P-256</selectable><selectable id="fcs_cop.1.1_SIGN_2">P-521</selectable><selectable id="fcs_cop.1.1_SIGN_3" exclusive="yes">no other curves</selectable></selectables></htm:i>] that meet the following: [<htm:i>FIPS PUB 186-4, "Digital Signature Standard (DSS)", Section 5</htm:i>]</selectable> </selectables>.</title>
      <note role="application">The ST author should choose the algorithm implemented to perform digital signatures; if more than one algorithm is available, this requirement should be iterated to specify the functionality. For the algorithm chosen, the ST author should make the appropriate assignments/selections to specify the parameters that are implemented for that algorithm.</note>
      <aactivity level="component">
       <TSS>There are no TSS evaluation activities for this component.<htm:br/><htm:br/></TSS>
       <Guidance>There are no guidance evaluation activities for this component.<htm:br/><htm:br/></Guidance>
       <Tests>
        Evaluation Activity Note: The following tests require the developer to provide access to a test platform that provides the evaluator with tools that are typically not found on factory products.
        <testlist>
         <test>
          [conditional] If
          <xref to="s-sign-ecdsa"/>
          is selected in FCS_COP.1.1/SIGN
          <testlist>ECDSA FIPS 186-4 Signature Generation TestFor each supported NIST curve (i.e. P-256, P-384 and P-521) and SHA function pair, the evaluator shall generate 10 1024-bit long messages and obtain for each message a public key and the resulting signature values R and S. To determine correctness, the evaluator shall use the signature verification function of a known good implementation. </testlist>
          <testlist>ECDSA FIPS 186-4 Signature Verification TestFor each supported NIST curve (i.e. P-256, P-384 and P-521) and SHA function pair, the evaluator shall generate a set of 10 1024-bit message, public key and signature tuples and modify one of the values (message, public key or signature) in five of the 10 tuples. The evaluator shall obtain in response a set of 10 PASS/FAIL values. </testlist>
         </test>
         <test>
          [conditional] If
          <xref to="s-sign-rsa"/>
          is selected in FCS_COP.1.1/SIGN
          <testlist>Signature Generation TestThe evaluator shall verify the implementation of RSA Signature Generation by the TOE using the Signature Generation Test. To conduct this test the evaluator must generate or obtain 10 messages from a trusted reference implementation for each modulus size/SHA combination supported by the TSF. The evaluator shall have the TOE use their private key and modulus value to sign these messages. The evaluator shall verify the correctness of the TSF’s signature using a known good implementation and the associated public keys to verify the signatures. The evaluator shall verify the implementation of RSA Signature Generation by the TOE using the Signature Generation Test. To conduct this test the evaluator must generate or obtain 10 messages from a trusted reference implementation for each modulus size/SHA combination supported by the TSF. The evaluator shall have the TOE use their private key and modulus value to sign these messages. The evaluator shall verify the correctness of the TSF’s signature using a known good implementation and the associated public keys to verify the signatures. </testlist>
          <testlist>Signature Verification TestThe evaluator shall perform the Signature Verification test to verify the ability of the TOE to recognize another party’s valid and invalid signatures. The evaluator shall inject errors into the test vectors produced during the Signature Verification Test by introducing errors in some of the public keys e, messages, IR format, or signatures. The TOE attempts to verify the signatures and returns success or failure. The evaluator shall use these test vectors to emulate the signature verification test using the corresponding parameters and verify that the TOE detects these errors. The evaluator shall perform the Signature Verification test to verify the ability of the TOE to recognize another party’s valid and invalid signatures. The evaluator shall inject errors into the test vectors produced during the Signature Verification Test by introducing errors in some of the public keys e, messages, IR format, or signatures. The TOE attempts to verify the signatures and returns success or failure. The evaluator shall use these test vectors to emulate the signature verification test using the corresponding parameters and verify that the TOE detects these errors. </testlist>
         </test>
        </testlist>
       </Tests>
      </aactivity>
     </f-element>
    </f-component>
    <!--FIA_X509_EXT.1 X.509 Validation of Certificates-->
    <f-component cc-id="fia_x509_ext.1" id="fia-x509-ext-1" name="X.509 Validation of Certificates">
     <comp-lev> specifies the rules the TSF must follow to determine if a particular X.509 certificate is valid.</comp-lev>
     <management>There are no management activities foreseen.</management>
     <audit>The following action is be auditable:
            Failure to validate X.509v3 certificate.</audit>
     <dependencies>FCS_COP.1 Cryptographic Operation</dependencies>
     <f-element id="fel-val-certs">
      <title>The TSF shall validate certificates in accordance with the following rules:  <htm:ul><htm:li>RFC 5280 certificate validation and certificate path validation.</htm:li><htm:li>The certificate path must terminate with a certificate in the Trust Anchor Database.</htm:li><htm:li>The TSF shall validate a certificate path by ensuring the presence of the basicConstraints extension, that the CA flag is set to TRUE for all CA certificates, and that any path constraints are met.</htm:li><htm:li>The TSF shall validate that any CA certificate includes caSigning purpose in the key usage field.</htm:li><htm:li>The TSF shall validate the revocation status of the certificate using<selectables><selectable id="fia_x509_ext.1.1_1">OCSP as specified in RFC 6960</selectable><selectable id="s-crl">CRL as specified in RFC 5759</selectable><selectable id="fia_x509_ext.1.1_2">an OCSP TLS Status Request Extension (OCSP stapling) as specified in RFC 6066</selectable><selectable id="fia_x509_ext.1.1_3">OCSP TLS Multi-Certificate Status Request Extension (i.e., OCSP Multi-Stapling) as specified in RFC 6961</selectable> </selectables>.</htm:li><htm:li>The TSF shall validate the extendedKeyUsage field according to the following rules:<htm:ul><htm:li>Certificates used for trusted updates and executable code integrity verification shall have the Code Signing Purpose (id-kp 3 with OID 1.3.6.1.5.5.7.3.3) in the extendedKeyUsage field.</htm:li><htm:li>Server certificates presented for TLS shall have the Server Authentication purpose (id-kp 1 with OID 1.3.6.1.5.5.7.3.1) in the extendedKeyUsage field.</htm:li><htm:li>Server certificates presented for EST shall have the CMC Registration Authority (RA) purpose (id-kp-cmcRA with OID 1.3.6.1.5.5.7.3.28) in the extendedKeyUsage field. [conditional]</htm:li><htm:li>Client certificates presented for TLS shall have the Client Authentication purpose (id-kp 2 with OID 1.3.6.1.5.5.7.3.2) in the extendedKeyUsage field.</htm:li><htm:li>OCSP certificates presented for OCSP responses shall have the OCSP Signing purpose (id-kp 9 with OID 1.3.6.1.5.5.7.3.9) in the extendedKeyUsage field. [conditional]</htm:li></htm:ul></htm:li></htm:ul></title>
      <note role="application">FIA_X509_EXT.1.1 lists the rules for validating certificates. The ST author must select whether revocation status is verified using OCSP or CRLs. OCSP stapling and OCSP multi-stapling only support TLS server certificate validation. If other certificate types are validated, either OCSP or CRL should be claimed. The <xref to="mod-wlanclient"/>, to which a MDF TOE must also conform, requires that certificates are used for EAP-TLS; this use requires that the extendedKeyUsage rules are verified. Certificates may optionally be used for trusted updates of system software and applications (FPT_TUD_EXT.2) and for integrity verification (FPT_TST_EXT.2(1)) and, if implemented, must be validated to contain the Code Signing purpose extendedKeyUsage.<htm:br/><htm:br/>While FIA_X509_EXT.1.1 requires that the TOE perform certain checks on the certificate presented by a TLS server, there are corresponding checks that the authentication server will have to perform on the certificate presented by the client; namely that the extendedKeyUsage field of the client certificate includes “Client Authentication” and that the key agreement bit (for the Diffie-Hellman ciphersuites) or the key encipherment bit (for RSA ciphersuites) be set. Certificates obtained for use by the TOE will have to conform to these requirements in order to be used in the enterprise. This check is required to support EAP-TLS for the <xref to="mod-wlanclient"/>.</note>
      <aactivity level="component">
       <TSS>The evaluator shall ensure the TSS describes where the check of validity of the certificates takes place. The evaluator ensures the TSS also provides a description of the certificate path validation algorithm.<htm:br/><htm:br/></TSS>
       <Guidance>There are no guidance evaluation activities for this component.<htm:br/><htm:br/></Guidance>
       <Tests>
        The tests described must be performed in conjunction with the other Certificate Services evaluation activities, including the use cases in FIA_X509_EXT.2.1 and FIA_X509_EXT.3. The tests for the extendedKeyUsage rules are performed in conjunction with the uses that require those rules. The evaluator shall create a chain of at least four certificates: the node certificate to be tested, two Intermediate CAs, and the self-signed Root CA.
        <testlist>
         <test>The evaluator shall demonstrate that validating a certificate without a valid certification path results in the function failing, for each of the following reasons, in turn: The evaluator shall then establish a valid certificate path consisting of valid CA certificates, and demonstrate that the function succeeds. The evaluator shall then remove trust in one of the CA certificates, and show that the function fails. <htm:li>By establishing a certificate path in which one of the issuing certificates is not a CA certificate,</htm:li><htm:li>By omitting the basicConstraints field in one of the issuing certificates,</htm:li><htm:li>By setting the basicConstraints field in an issuing certificate to have CA=False,</htm:li><htm:li>By omitting the CA signing bit of the key usage field in an issuing certificate, and</htm:li><htm:li>By setting the path length field of a valid CA field to a value strictly less than the certificate path.</htm:li>The evaluator shall demonstrate that validating a certificate without a valid certification path results in the function failing, for each of the following reasons, in turn: The evaluator shall then establish a valid certificate path consisting of valid CA certificates, and demonstrate that the function succeeds. The evaluator shall then remove trust in one of the CA certificates, and show that the function fails. </test>
         <test>The evaluator shall demonstrate that validating an expired certificate results in the function failing. </test>
         <test>The evaluator shall test that the TOE can properly handle revoked certificates-conditional on whether CRL, OCSP, OSCP stapling, or OCSP multi-stapling is selected; if multiple methods are selected, then the following tests shall be performed for each method: The evaluator shall test revocation of the node certificate. The evaluator shall also test revocation of the intermediate CA certificate (i.e. the intermediate CA certificate should be revoked by the root CA). For the test of the WLAN use case, only pre-stored CRLs are used. If OCSP stapling per RFC 6066 is the only supported revocation method, this test is omitted. The evaluator shall ensure that a valid certificate is used, and that the validation function succeeds. The evaluator then attempts the test with a certificate that has been revoked (for each method chosen in the selection) to ensure when the certificate is no longer valid that the validation function fails. The evaluator shall test that the TOE can properly handle revoked certificates-conditional on whether CRL, OCSP, OSCP stapling, or OCSP multi-stapling is selected; if multiple methods are selected, then the following tests shall be performed for each method: The evaluator shall test revocation of the node certificate. The evaluator shall also test revocation of the intermediate CA certificate (i.e. the intermediate CA certificate should be revoked by the root CA). For the test of the WLAN use case, only pre-stored CRLs are used. If OCSP stapling per RFC 6066 is the only supported revocation method, this test is omitted. The evaluator shall ensure that a valid certificate is used, and that the validation function succeeds. The evaluator then attempts the test with a certificate that has been revoked (for each method chosen in the selection) to ensure when the certificate is no longer valid that the validation function fails. The evaluator shall test that the TOE can properly handle revoked certificates-conditional on whether CRL, OCSP, OSCP stapling, or OCSP multi-stapling is selected; if multiple methods are selected, then the following tests shall be performed for each method: The evaluator shall test revocation of the node certificate. The evaluator shall also test revocation of the intermediate CA certificate (i.e. the intermediate CA certificate should be revoked by the root CA). For the test of the WLAN use case, only pre-stored CRLs are used. If OCSP stapling per RFC 6066 is the only supported revocation method, this test is omitted. The evaluator shall ensure that a valid certificate is used, and that the validation function succeeds. The evaluator then attempts the test with a certificate that has been revoked (for each method chosen in the selection) to ensure when the certificate is no longer valid that the validation function fails. The evaluator shall test that the TOE can properly handle revoked certificates-conditional on whether CRL, OCSP, OSCP stapling, or OCSP multi-stapling is selected; if multiple methods are selected, then the following tests shall be performed for each method: The evaluator shall test revocation of the node certificate. The evaluator shall also test revocation of the intermediate CA certificate (i.e. the intermediate CA certificate should be revoked by the root CA). For the test of the WLAN use case, only pre-stored CRLs are used. If OCSP stapling per RFC 6066 is the only supported revocation method, this test is omitted. The evaluator shall ensure that a valid certificate is used, and that the validation function succeeds. The evaluator then attempts the test with a certificate that has been revoked (for each method chosen in the selection) to ensure when the certificate is no longer valid that the validation function fails. </test>
         <test>If any OCSP option is selected, the evaluator shall configure the OCSP server or use a man-in-the-middle tool to present a certificate that does not have the OCSP signing purpose and verify that validation of the OCSP response fails. If is selected, the evaluator shall configure the CA to sign a CRL with a certificate that does not have the cRLsign key usage bit set, and verify that validation of the CRL fails. If any OCSP option is selected, the evaluator shall configure the OCSP server or use a man-in-the-middle tool to present a certificate that does not have the OCSP signing purpose and verify that validation of the OCSP response fails. If is selected, the evaluator shall configure the CA to sign a CRL with a certificate that does not have the cRLsign key usage bit set, and verify that validation of the CRL fails. </test>
         <test>The evaluator shall modify any byte in the first eight bytes of the certificate and demonstrate that the certificate fails to validate (the certificate will fail to parse correctly). </test>
         <test>The evaluator shall modify any bit in the last byte of the signature algorithm of the certificate and demonstrate that the certificate fails to validate (the signature on the certificate will not validate). </test>
         <test>The evaluator shall modify any byte in the public key of the certificate and demonstrate that the certificate fails to validate (the signature on the certificate will not validate). </test>
        </testlist>
       </Tests>
      </aactivity>
     </f-element>
     <f-element id="fel-cacert-what">
      <title>The TSF shall only treat a certificate as a CA certificate if the basicConstraints extension is present and the CA flag is set to TRUE.</title>
      <note role="application">This requirement applies to certificates that are used and processed by the TSF and restricts the certificates that may be added to the Trust Anchor Database.</note>
     </f-element>
    </f-component>
    <!--FMT_SMF.1 Specification of Management Functions-->
    <f-component cc-id="fmt_smf.1" id="fmt-smf-1" name="Specification of Management Functions">
     <f-element id="fel-smf-ext">
      <title>
       The TSF shall be capable of performing the following management functions:
       <htm:b>
        <ctr id="fmt_smf" ctr-type="Table">: Management Functions</ctr>
       </htm:b>
       Status Markers:  M - Mandatory  O - Optional/Objective
       <htm:br/>
       <htm:br/>
       <htm:b>
        <ctr id="undefined" ctr-type="Table">: Management Functions</ctr>
       </htm:b>
       <htm:br/>
       <htm:br/>
       Status Markers:
       <htm:br/>
       O - Indicates that this function is optional for this role
       <htm:br/>
       M - Indicates that this function is mandatory for this role.
       <htm:br/>
       NA - Indicates that this function is not applicable for this role
       <htm:br/>
       <htm:br/>
       <management-function-set default="O">
        <manager cid="I">Impl.</manager>
        <manager cid="U">User Only</manager>
        <manager cid="A">Admin</manager>
        <manager cid="AO">Admin Only</manager>
        <management-function id="mf-pwd">
         <text>configure password policy:  <htm:ul><htm:li>Minimum password length  </htm:li>  <htm:li>Minimum password complexity  </htm:li>  <htm:li>Maximum password lifetime  </htm:li>  </htm:ul></text>
         <M ref="I"/>
         <NA ref="U"/>
         <M ref="A"/>
         <M ref="AO"/>
         <aactivity>
          <TSS>The evaluator shall verify the TSS defines the allowable policy options: the range of values for both password length and lifetime, and a description of complexity to include character set and complexity policies (e.g., configuration and enforcement of number of uppercase, lowercase, and special characters per password).</TSS>
          <Guidance/>
          <Tests>The evaluator shall exercise the TSF configuration as the administrator and perform positive and negative tests, with at least two values set for each variable setting, for each of the following:  <htm:li>Minimum password length</htm:li><htm:li>Minimum password complexity</htm:li><htm:li>Maximum password lifetime</htm:li></Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-screenlock">
         <text>configure session locking policy:  <htm:ul><htm:li>Screen-lock enabled/disabled  </htm:li>  <htm:li>Screen lock timeout  </htm:li>  <htm:li>Number of authentication failures  </htm:li>  </htm:ul></text>
         <M ref="I"/>
         <NA ref="U"/>
         <M ref="A"/>
         <M ref="AO"/>
         <aactivity>
          <TSS>The evaluator shall verify the TSS defines the range of values for both timeout period and number of authentication failures for all supported authentication mechanisms.</TSS>
          <Guidance/>
          <Tests>The evaluator shall exercise the TSF configuration as the administrator. The evaluator shall perform positive and negative tests, with at least two values set for each variable setting, for each of the following:  <htm:li>Screen-lock enabled/disabled</htm:li><htm:li>Screen lock timeout</htm:li><htm:li>Number of authentication failures (may be combined with test for FIA_AFL_EXT.1)</htm:li></Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-vpn">
         <text>enable/disable the VPN protection:  <htm:ul><htm:li>Across device  </htm:li>  </htm:ul><selectables linebreak="yes"><selectable id="s-vpn-per-app">on a per-app basis</selectable><selectable id="s-vpn-per-appgroup">on a per-group of applications processes basis</selectable><selectable id="fmt_smf.1.1_1" exclusive="yes">no other method</selectable> </selectables></text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note><also ref-id="mf-audioVisual"/><also ref-id="mf-location"/>  Functions <_/>must be implemented on a device-wide basis but may also be implemented on a per-app basis or on a per-group of applications basis in which the configuration includes the list of applications or groups of applications to which the enable/disable applies.</app-note>
         <app-note>Function <_/>addresses enabling and disabling the IPsec VPN only. The configuration of the VPN Client itself (with information such as VPN Gateway, certificates, and algorithms) is addressed by the <xref to="mod-vpnclient"/>. The administrator options should only be listed if the administrator can remotely enable/disable the VPN connection.<htm:p>Function <xref to="mf-vpn"/>optionally allows the VPN to be configured per-app or per-groups of apps. If this configuration is selected, it does not void FDP_IFC_EXT.1. Instead FDP_IFC_EXT.1 is applied to the application or group of applications the VPN is applied to. In other words, all traffic destined for the VPN-enabled application or group of applications, must travel through the VPN, but traffic not destined for that application or group of applications can travel outside the VPN. When the VPN is configured across the device FDP_IFC_EXT.1 applies to all traffic and the VPN must not split tunnel.</htm:p></app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall perform the following tests: <testlist><test>The evaluator shall exercise the TSF configuration to enable the VPN protection. These configuration actions must be used for the testing of the FDP_IFC_EXT.1.1 requirement. </test><test>[conditional] If " " is selected, the evaluator shall create two applications and enable one to use the VPN and the other to not use the VPN. The evaluator shall exercise each application (attempting to access network resources; for example, by browsing different websites) individually while capturing packets from the TOE. The evaluator shall verify from the packet capture that the traffic from the VPN-enabled application is encapsulated in IPsec and that the traffic from the VPN-disabled application is not encapsulated in IPsec. [conditional] If " " is selected, the evaluator shall create two applications and enable one to use the VPN and the other to not use the VPN. The evaluator shall exercise each application (attempting to access network resources; for example, by browsing different websites) individually while capturing packets from the TOE. The evaluator shall verify from the packet capture that the traffic from the VPN-enabled application is encapsulated in IPsec and that the traffic from the VPN-disabled application is not encapsulated in IPsec. </test><test>[conditional] If " " is selected, the evaluator shall create two applications and the applications shall be placed into different groups. Enable one application group to use the VPN and the other to not use the VPN. The evaluator shall exercise each application (attempting to access network resources; for example, by browsing different websites) individually while capturing packets from the TOE. The evaluator shall verify from the packet capture that the traffic from the application in the VPN-enabled group is encapsulated in IPsec and that the traffic from the application in the VPN-disabled group is not encapsulated in IPsec. [conditional] If " " is selected, the evaluator shall create two applications and the applications shall be placed into different groups. Enable one application group to use the VPN and the other to not use the VPN. The evaluator shall exercise each application (attempting to access network resources; for example, by browsing different websites) individually while capturing packets from the TOE. The evaluator shall verify from the packet capture that the traffic from the application in the VPN-enabled group is encapsulated in IPsec and that the traffic from the application in the VPN-disabled group is not encapsulated in IPsec. </test></testlist></Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-radios">
         <text>enable/disable<assignable>list of all radios</assignable></text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>The assignment in function <_/>consists of all radios present on the TSF, such as Wi-Fi, cellular, NFC, Bluetooth BR/EDR, and Bluetooth LE, which can be enabled and disabled. In the future, if both Bluetooth BR/EDR and Bluetooth LE are supported, they will be required to be enabled and disabled separately. Disablement of the cellular radio does not imply that the radio may not be enabled in order to place emergency phone calls; however, it is not expected that a device in "airplane mode", where all radios are disabled, will automatically (without authorization) turn on the cellular radio to place emergency calls.</app-note>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS includes a description of each radio and an indication of if the radio can be enabled/disabled along with what role can do so. In addition the evaluator shall verify that the frequency ranges at which each radio operates is included in the TSS. The evaluator shall verify that the TSS includes at what point in the boot sequence the radios are powered on and indicates if the radios are used as part of the initialization of the device.</TSS>
          <Guidance>The evaluator shall confirm that the AGD guidance describes how to perform the enable/disable function for each radio.<htm:br/><htm:br/></Guidance>
          <Tests>The evaluator shall ensure that minimal signal leakage enters the RF shielded enclosure (i.e. Faraday bag, Faraday box, RF shielded room) by performing the following steps:   Step 1: Place the antenna of the spectrum analyzer inside the RF shielded enclosure.   Step 2: Enable "Max Hold" on the spectrum analyzer and perform a spectrum sweep of the frequency range between 300 MHz – 6000 MHz, in I kHz steps (this range should encompass 802.11, 802.15, GSM, UMTS, and LTE). This range will not address NFC 13.56.MHz, another test should be set up with similar constraints to address NFC.   If power above -90 dBm is observed, the Faraday box has too great of signal leakage and shall not be used to complete the test for Function  . The evaluator shall exercise the TSF configuration as the administrator and, if not restricted to the administrator, the user, to enable and disable the state of each radio (e.g. Wi-Fi, cellular, NFC, Bluetooth). Additionally, the evaluator shall repeat the steps below, booting into any auxiliary boot mode supported by the device. For each radio, the evaluator shall:   Step 1: Place the antenna of the spectrum analyzer inside the RF shielded enclosure. Configure the spectrum analyzer to sweep desired frequency range for the radio to be tested (based on range provided in the TSS)). The ambient noise floor shall be set to -110 dBm. Place the TOE into the RF shielded enclosure to isolate them from all other RF traffic.   Step 2: The evaluator shall create a baseline of the expected behavior of RF signals. The evaluator shall power on the device, ensure the radio in question is enabled, power off the device, enable "Max Hold" on the spectrum analyzer and power on the device. The evaluator shall wait 2 minutes at each Authentication Factor interface prior to entering the necessary password to complete the boot process, waiting 5 minutes after the device is fully booted. The evaluator shall observe that RF spikes are present at the expected uplink channel frequency. The evaluator shall clear the "Max Hold" on the spectrum analyzer.   Step 3: The evaluator shall verify the absence of RF activity for the uplink channel when the radio in question is disabled. The evaluator shall complete the following test five times. The evaluator shall power on the device, ensure the radio in question is disabled, power off the device, enable "Max Hold" on the spectrum analyzer and power on the device. The evaluator shall wait 2 minutes at each Authentication Factor interface prior to entering the necessary password to complete the boot process, waiting 5 minutes after the device is fully booted. The evaluator shall clear the "Max Hold" on the spectrum analyzer. If the radios are used for device initialization, then a spike of RF activity for the uplink channel can be observed initially at device boot. However, if a spike of RF activity for the uplink channel of the specific radio frequency band is observed after the device is fully booted or at an Authentication Factor interface it is deemed that the radio is enabled.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-audioVisual">
         <text>enable/disable<assignable>list of audio or visual collection devices</assignable>:  <htm:ul><htm:li>Across device  </htm:li>  </htm:ul><selectables linebreak="yes"><selectable id="s-audiovisual-per-app">on a per-app basis</selectable><selectable id="s-audiovisual-per-appgroup">on a per-group of applications processes basis</selectable><selectable id="fmt_smf.1.1_2" exclusive="yes">no other method</selectable> </selectables></text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>The assignment in function <_/>consists of at least one audio or visual device, such as camera and microphone, which can be enabled and disabled by either the user or administrator. Disablement of the microphone does not imply that the microphone may not be enabled in order to place emergency phone calls. If certain devices are able to be restricted to the enterprise (either device-wide, per-app or per-group of applications) and others are able to be restricted to users, then this function should be iterated in the table with the appropriate table entries.<htm:p>Regarding functions <xref to="mf-radios"/>and <xref to="mf-audioVisual"/>, disablement of a particular radio or audio/visual device must be effective as soon as the TOE has power. Disablement must also apply when the TOE is booted into auxiliary boot modes, for example, associated with updates or backup. If the TOE supports states in which security management policy is inaccessible, for example, due to data-at-rest protection, it is acceptable to meet this requirement by ensuring that these devices are disabled by default while in these states. That these devices are disabled during auxiliary boot modes does not imply that the device (particularly the cellular radio) may not be enabled in order to perform emergency phone calls.</htm:p></app-note>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS includes a description of each collection device and an indication of if it can be enabled/disabled along with what role can do so. The evaluator shall confirm that the AGD guidance describes how to perform the enable/disable function.</TSS>
          <Guidance/>
          <Tests>The evaluator shall perform the following tests: <testlist><test>The evaluator shall exercise the TSF configuration as the administrator and, if not restricted to the administrator, the user, to enable and disable the state of each audio or visual collection devices (e.g. camera, microphone) listed by the ST author. For each collection device, the evaluator shall disable the device and then attempt to use its functionality. The evaluator shall reboot the TOE and verify that disabled collection devices may not be used during or early in the boot process. Additionally, the evaluator shall boot the device into each available auxiliary boot mode and verify that the collection device cannot be used. </test><test>[conditional] If " " is selected, the evaluator shall create two applications and enable one to use access the A/V device and the other to not access the A/V device. The evaluator shall exercise each application attempting to access the A/V device individually. The evaluator shall verify that the enabled application is able to access the A/V device and the disabled application is not able to access the A/V device. [conditional] If " " is selected, the evaluator shall create two applications and enable one to use access the A/V device and the other to not access the A/V device. The evaluator shall exercise each application attempting to access the A/V device individually. The evaluator shall verify that the enabled application is able to access the A/V device and the disabled application is not able to access the A/V device. </test><test>[conditional] If " " is selected, the evaluator shall create two applications and the applications shall be placed into different groups. Enable one group to access the A/V device and the other to not access the A/V device. The evaluator shall exercise each application attempting to access the A/V device individually. The evaluator shall verify that the application in the enabled group is able to access the A/V device and the application in the disabled group is not able to access the A/V device. [conditional] If " " is selected, the evaluator shall create two applications and the applications shall be placed into different groups. Enable one group to access the A/V device and the other to not access the A/V device. The evaluator shall exercise each application attempting to access the A/V device individually. The evaluator shall verify that the application in the enabled group is able to access the A/V device and the application in the disabled group is not able to access the A/V device. </test></testlist></Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-lockState">
         <text>transition to the locked state</text>
         <M ref="I"/>
         <NA ref="U"/>
         <M ref="A"/>
         <NA ref="AO"/>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall use the test environment to instruct the TSF, both as a user and as the administrator, to command the device to transition to a locked state, and verify that the device transitions to the locked state upon command.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-wipe">
         <text>TSF wipe of protected data</text>
         <M ref="I"/>
         <NA ref="U"/>
         <M ref="A"/>
         <NA ref="AO"/>
         <app-note>Wipe of the TSF (function <xref to="mf-wipe"/>) is performed according to FCS_CKM_EXT.5. Protected data is all non-TSF data, including all user or enterprise data. Some or all of this data may be considered sensitive data as well.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall use the test environment to instruct the TSF, both as a user and as the administrator, to command the device to perform a wipe of protected data. The evaluator must ensure that this management setup is used when conducting the Evaluation Activities in FCS_CKM_EXT.5.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-appInstallRules">
         <text>configure application installation policy by<selectables linebreak="yes"><selectable id="mf-appInstallRules-restrict">restricting the sources of applications</selectable><selectable id="mf-appInstallRules-specify">specifying a set of allowed applications based on<assignable>application characteristics</assignable>(an application allowlist)</selectable><selectable id="mf-appInstallRules-deny">denying installation of applications</selectable> </selectables></text>
         <M ref="I"/>
         <NA ref="U"/>
         <M ref="A"/>
         <M ref="AO"/>
         <app-note>The selection in function <xref to="mf-appInstallRules"/>allows the ST author to select which mechanisms are available to the administrator through the MDM Agent to restrict the applications which the user may install. The ST author must state if application allowlist is applied device-wide or if it can be specified to apply to either the Enterprise or Personal applications.<htm:ul><htm:li>If the administrator can restrict the sources from which applications can be installed, the ST author selects " <xref to="mf-appInstallRules-restrict"/>".</htm:li><htm:li>If the administrator can specify a allowlist of allowed applications, the ST author selects " <xref to="mf-appInstallRules-specify"/>". The ST author should list any application characteristics (e.g. name, version, or developer) based on which the allowlist can be formed.</htm:li><htm:li>If the administrator can prevent the user from installing additional applications, the ST author selects " <xref to="mf-appInstallRules-deny"/>".</htm:li></htm:ul></app-note>
         <aactivity>
          <TSS>The evaluator shall verify the TSS describes the allowable application installation policy options based on the selection included in the ST. If the <xref to="mf-appInstallRules-specify"/>is selected, the evaluator shall verify that the TSS includes a description of each application characteristic upon which the allowlist may be based.</TSS>
          <Guidance/>
          <Tests>The evaluator shall exercise the TSF configuration as the administrator to restrict particular applications, sources of applications, or application installation according to the AGD guidance. The evaluator shall attempt to install unauthorized applications and ensure that this is not possible. The evaluator shall, in conjunction, perform the following specific tests: <testlist><test>[conditional] The evaluator shall attempt to connect to an unauthorized repository in order to install applications. </test><test>[conditional] The evaluator shall attempt to install two applications (one allowlisted, and one not) from a known allowed repository and verify that the application not on the allowlist is rejected. The evaluator shall also attempt to side-load executables or installation packages via USB connections to determine that the white list is still adhered to </test></testlist></Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-keyStorage">
         <text>import keys or secrets into the secure key storage</text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <NA ref="AO"/>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS describes each category of keys or secrets that can be imported into the TSF’s secure key storage.</TSS>
          <Guidance/>
          <Tests>The test of these functions is performed in association with FCS_STG_EXT.1.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-keyWipe">
         <text>destroy imported keys or secrets and<selectables><selectable id="fmt_smf.1.1_4" exclusive="yes">no other keys or secrets</selectable><selectable id="fmt_smf.1.1_6"><assignable>list of other categories of keys or secrets</assignable></selectable> </selectables>in the secure key storage</text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <NA ref="AO"/>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests/>
         </aactivity>
        </management-function>
        <management-function id="mf-certImport">
         <text>import X.509v3 certificates into the Trust Anchor Database</text>
         <M ref="I"/>
         <NA ref="U"/>
         <M ref="A"/>
         <O ref="AO"/>
         <aactivity>
          <TSS/>
          <Guidance>The evaluator shall review the AGD guidance to determine that it describes the steps needed to import, modify, or remove certificates in the Trust Anchor database, and that the users that have authority to import those certificates (e.g., only administrator, or both administrators and users) are identified.</Guidance>
          <Tests>The evaluator shall import certificates according to the AGD guidance as the user or as the administrator, as determined by the administrative guidance. The evaluator shall verify that no errors occur during import. The evaluator should perform an action requiring use of the X.509v3 certificate to provide assurance that installation was completed properly.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-certWipe">
         <text>remove imported X.509v3 certificates and<selectables><selectable id="fmt_smf.1.1_7" exclusive="yes">no other X.509v3 certificates</selectable><selectable id="fmt_smf.1.1_9"><assignable>list of other categories of X.509v3 certificates</assignable></selectable> </selectables>in the Trust Anchor Database</text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <NA ref="AO"/>
         <app-note>In the future, function <xref to="mf-certWipe"/>may require destruction or disabling of any default trusted CA certificates, excepting those CA certificates necessary for continued operation of the TSF, such as the developer’s certificate. At this time, the ST author must indicate in the assignment whether pre-installed or any other category of X.509v3 certificates may be removed from the Trust Anchor Database.</app-note>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS describes each additional category of X.509 certificates and their use within the TSF.</TSS>
          <Guidance/>
          <Tests>The evaluator shall remove an administrator-imported certificate and any other categories of certificates included in the assignment of function  from the Trust Anchor Database according to the AGD guidance as the user and as the administrator.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-enroll">
         <text>enroll the TOE in management</text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>For function <xref to="mf-enroll"/>, the enrollment function may be installing an MDM agent and includes the policies to be applied to the device. It is acceptable for the user approval notice to require the user to intentionally opt to view the policies (for example, by "tapping" on a "View" icon) rather than listing the policies in full in the notice.</app-note>
         <aactivity>
          <TSS>The evaluator shall examine the TSS to ensure that it contains a description of each management function that will be enforced by the enterprise once the device is enrolled. The evaluator shall examine the AGD guidance to determine that this same information is present.</TSS>
          <Guidance/>
          <Tests>The evaluator shall verify that user approval is required to enroll the device into management.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-appRemove">
         <text>remove applications</text>
         <M ref="I"/>
         <NA ref="U"/>
         <M ref="A"/>
         <O ref="AO"/>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS includes an indication of what applications (e.g., user-installed applications, Administrator-installed applications, or Enterprise applications) can be removed along with what role can do so. The evaluator shall examine the AGD guidance to determine that it details, for each type of application that can be removed, the procedures necessary to remove those applications and their associated data. For the purposes of this Evaluation Activity, "associated data" refers to data that are created by the app during its operation that do not exist independent of the app's existence, for instance, configuration data, or e-mail information that’s part of an e-mail client. It does not, on the other hand, refer to data such as word processing documents (for a word processing app) or photos (for a photo or camera app).</TSS>
          <Guidance/>
          <Tests>The evaluator shall attempt to remove applications according to the AGD guidance and verify that the TOE no longer permits users to access those applications or their associated data.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-update">
         <text>update system software</text>
         <M ref="I"/>
         <NA ref="U"/>
         <M ref="A"/>
         <O ref="AO"/>
         <app-note>For function <xref to="mf-update"/>, the administrator capability to update the system software may be limited to causing a prompt to the user to update rather than the ability to initiate the update itself. As the administrator is likely to be acting remotely, he/she would be unaware of inopportune situations, such as low power, which may cause the update to fail and the device to become inoperable. The user can refuse to accept the update in such situations. It is expected that system architects will be cognizant of this limitation and will enforce network access controls in order to enforce enterprise-critical updates.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall attempt to update the TSF system software following the procedures in the AGD guidance and verify that updates correctly install and that the version numbers of the system software increase.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-appInstall">
         <text>install applications</text>
         <M ref="I"/>
         <NA ref="U"/>
         <M ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-appInstall"/>addresses both installation and update. This protection profile does not distinguish between installation and update of applications because mobile devices typically completely overwrite the previous installation with a new installation during an application update.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall attempt to install an application following the procedures in the AGD guidance and verify that the application is installed and available on the TOE.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-entAppRemove">
         <text>remove Enterprise applications</text>
         <M ref="I"/>
         <NA ref="U"/>
         <M ref="A"/>
         <NA ref="AO"/>
         <app-note>For function <xref to="mf-entAppRemove"/>, "Enterprise applications" are those applications that belong to the Enterprise application group. Applications installed by the enterprise administrator (including automatic installation by the administrator after being requested by the user from a catalog of enterprise applications) are by default placed in the Enterprise application group unless an exception has been made in function <xref to="mf-appGroups"/>of FMT_SMF.1.1.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall attempt to remove any Enterprise applications from the device by following the administrator guidance. The evaluator shall verify that the TOE no longer permits users to access those applications or their associated data.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-notifications">
         <text>enable/disable display notification in the locked state of:<selectables linebreak="yes"><selectable id="fmt_smf.1.1_10">email notifications</selectable><selectable id="fmt_smf.1.1_11">calendar appointments</selectable><selectable id="fmt_smf.1.1_12">contact associated with phone call notification</selectable><selectable id="fmt_smf.1.1_13">text message notification</selectable><selectable id="fmt_smf.1.1_15"><assignable>other application-based notifications</assignable></selectable><selectable id="fmt_smf.1.1_16">all notifications</selectable> </selectables></text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>If the display of notifications in the locked state is supported, the configuration of these notifications (function <xref to="mf-notifications"/>) must be included in the selection.</app-note>
         <aactivity>
          <TSS/>
          <Guidance>The evaluator shall examine the AGD Guidance to determine that it specifies, for at least each category of information selected for Function <xref to="mf-notifications"/>, how to enable and disable display information for that type of information in the locked state.</Guidance>
          <Tests>For each category of information listed in the AGD guidance, the evaluator shall verify that when that TSF is configured to limit the information according to the AGD, the information is no longer displayed in the locked state.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-dar">
         <text>enable data-at rest protection</text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-dar"/>must be included in the selection if data-at-rest protection is not natively enabled.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall exercise the TSF configuration as the administrator and, if not restricted to the administrator, the user, to enable system-wide data-at-rest protection according to the AGD guidance. The evaluator shall ensure that all Evaluation Activities for DAR (FDP_DAR) are conducted with the device in this configuration.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-rmediaDar">
         <text>enable removable media’s data-at-rest protection</text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-rmediaDar"/>is implicitly met if the TSF does not support removable media.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall exercise the TSF configuration as the administrator and, if not restricted to the administrator, the user, to enable removable media’s data-at-rest protection according to the AGD guidance. The evaluator shall ensure that all Evaluation Activities for DAR (FDP_DAR) are conducted with the device in this configuration.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-location">
         <text>enable/disable location services:  <htm:ul><htm:li>Across device  </htm:li>  </htm:ul><selectables linebreak="yes"><selectable id="mf-location-per_app">on a per-app basis</selectable><selectable id="fmt_smf.1.1_17">on a per-group of applications processes basis</selectable><selectable id="fmt_smf.1.1_18" exclusive="yes">no other method</selectable> </selectables></text>
         <M ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>For function <xref to="mf-location"/>, location services include location information gathered from GPS, cellular, and Wi-Fi.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall perform the following tests. <testlist><test>The evaluator shall enable location services device-wide and shall verify that an application (such as a mapping application) is able to access the TOE’s location information. The evaluator shall disable location services device-wide and shall verify that an application (such as a mapping application) is unable to access the TOE’s location information. </test><test>[conditional] If is selected, the evaluator shall create two applications and enable one to use access the location services and the other to not access the location services. The evaluator shall exercise each application attempting to access location services individually. The evaluator shall verify that the enabled application is able to access the location services and the disabled application is not able to access the location services. [conditional] If is selected, the evaluator shall create two applications and enable one to use access the location services and the other to not access the location services. The evaluator shall exercise each application attempting to access location services individually. The evaluator shall verify that the enabled application is able to access the location services and the disabled application is not able to access the location services. </test></testlist></Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-authFactors">
         <text>enable/disable the use of<selectables><selectable id="fmt_smf.1.1_19">Biometric Authentication Factor</selectable><selectable id="fmt_smf.1.1_20">Hybrid Authentication Factor</selectable> </selectables></text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-authFactors"/>must be included in the ST if the TOE contains a BAF. This selection must correspond with the selection made in FIA_UAU.5.1. If <xref to="uau_biometric"/>is selected in FIA_UAU.5.1, "Biometric Authentication Factor" must be selected and the user or admin must have the option to disable the use of it. If multiple BAFs are claimed in FIA_MBV_EXT.1.1 in the <xref to="mod-biometrics"/>, this applies to all different modalities. If <xref to="uau_hybr"/>is selected in FIA_UAU.5.1 it must be selected and the user or admin must have the option to disable the use of it.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall verify that the TSS states if the TOE supports a BAF or hybrid authentication. If the TOE does not include a BAF or hybrid authentication this test is implicitly met. <testlist><test>[conditional] If is selected in FIA_UAU.5.1, for each BAF claimed in FIA_MBV_EXT.1.1 in the the evaluator shall verify that the TSS describes the procedure to enable/disable the BAF. The evaluator shall configure the TOE to allow each supported BAF to authenticate and verify that successful authentication can be achieved using the BAF. The evaluator shall configure the TOE to disable the use of each supported BAF for authentication and confirm that the BAF cannot be used to authenticate. [conditional] If is selected in FIA_UAU.5.1, for each BAF claimed in FIA_MBV_EXT.1.1 in the the evaluator shall verify that the TSS describes the procedure to enable/disable the BAF. The evaluator shall configure the TOE to allow each supported BAF to authenticate and verify that successful authentication can be achieved using the BAF. The evaluator shall configure the TOE to disable the use of each supported BAF for authentication and confirm that the BAF cannot be used to authenticate. [conditional] If is selected in FIA_UAU.5.1, for each BAF claimed in FIA_MBV_EXT.1.1 in the the evaluator shall verify that the TSS describes the procedure to enable/disable the BAF. The evaluator shall configure the TOE to allow each supported BAF to authenticate and verify that successful authentication can be achieved using the BAF. The evaluator shall configure the TOE to disable the use of each supported BAF for authentication and confirm that the BAF cannot be used to authenticate. [conditional] If is selected in FIA_UAU.5.1, for each BAF claimed in FIA_MBV_EXT.1.1 in the the evaluator shall verify that the TSS describes the procedure to enable/disable the BAF. The evaluator shall configure the TOE to allow each supported BAF to authenticate and verify that successful authentication can be achieved using the BAF. The evaluator shall configure the TOE to disable the use of each supported BAF for authentication and confirm that the BAF cannot be used to authenticate. </test><test>[conditional] If is selected the evaluator shall verify that the TSS describes the procedure to enable/disable the hybrid (biometric credential and PIN/password) authentication. The evaluator shall configure the TOE to allow hybrid authentication to authenticate and confirm that successful authentication can be achieved using the hybrid authentication. The evaluator shall configure the TOE to disable the use of hybrid authentication and confirm that the hybrid authentication cannot be used to authenticate. [conditional] If is selected the evaluator shall verify that the TSS describes the procedure to enable/disable the hybrid (biometric credential and PIN/password) authentication. The evaluator shall configure the TOE to allow hybrid authentication to authenticate and confirm that successful authentication can be achieved using the hybrid authentication. The evaluator shall configure the TOE to disable the use of hybrid authentication and confirm that the hybrid authentication cannot be used to authenticate. </test></testlist></Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-certInvalid">
         <text>configure whether to allow or disallow establishment of<assignable>configurable trusted channel in FTP_ITC_EXT.1.1 or FDP_UPC_EXT.1.1/APPS</assignable>if the peer or server certificate is deemed invalid.</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-certInvalid"/>must be included in the ST if the function is configurable on the TOE for any of the trusted channels either mandated or selected in <xref to="fel-wlan"/>or <xref to="fel-tls-app"/>. The configuration can be different depending on the specific trusted channel(s) and they must be filled in for the assignment.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The test of this function is performed in conjunction with FIA_X509_EXT.2.2, FCS_TLSC_EXT.1.3 in the  .</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-externalPorts">
         <text>enable/disable all data signaling over<assignable>list of externally accessible hardware ports</assignable></text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>The assignment in function <xref to="mf-externalPorts"/>consists of all externally accessible hardware ports, such as USB, the SD card, and HDMI, whose data transfer capabilities can be enabled and disabled by either the user or administrator. Disablement of data transfer over an external port must be effective during and after boot into the normal operative mode of the device. If the TOE supports states in which configured security management policy is inaccessible, for example, due to data-at-rest protection, it is acceptable to meet this requirement by ensuring that data transfer is disabled by default while in these states. Each of the ports may be enabled or disabled separately. The configuration policy need not disable all ports together. In the case of USB, charging is still allowed if data transfer capabilities have been disabled.</app-note>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS includes a list of each externally accessible hardware port and an indication of if data transfer over that port can be enabled/disabled. AGD guidance will describe how to perform the enable/disable function.</TSS>
          <Guidance/>
          <Tests>The evaluator shall exercise the TSF configuration to enable and disable data transfer capabilities over each externally accessible hardware ports (e.g. USB, SD card, HDMI) listed by the ST author. The evaluator shall use test equipment for the particular interface to ensure that while the TOE may continue to receive data on the RX pins, it is not responding on TX pins used for data transfer when they are disabled. For each disabled data transfer capability, the evaluator shall repeat this test by rebooting the device into the normal operational mode and verifying that the capability is disabled throughout the boot and early execution stage of the device.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-serverProtocols">
         <text>enable/disable<assignable>list of protocols where the device acts as a server</assignable></text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>The assignment in function <xref to="mf-serverProtocols"/>consists of all protocols where the TSF acts as a server, which can be enabled and disabled by either the user or administrator.</app-note>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS describes how the TSF acts as a server in each of the protocols listed in the ST, and the reason for acting as a server.</TSS>
          <Guidance/>
          <Tests>The evaluator shall attempt to disable each listed protocol in the assignment. The evaluator shall verify that remote devices can no longer access the TOE or TOE resources using any disabled protocols.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-devModes">
         <text>enable/disable developer modes</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-devModes"/>must be included in the selection if developer modes are supported by the TSF.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall exercise the TSF configuration as the administrator and, if not restricted to the administrator, the user, to enable and disable any developer mode. The evaluator shall test that developer mode access is not available when its configuration is disabled. The evaluator shall verify the developer mode remains disabled during device reboot.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-authBypass">
         <text>enable/disable bypass of local user authentication</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-authBypass"/>must be included in the selection if bypass of local user authentication, such as a "Forgot Password", password hint, or remote authentication feature, is supported.</app-note>
         <aactivity>
          <TSS/>
          <Guidance>The evaluator shall examine the AGD guidance to determine that it describes how to enable and disable any "Forgot Password", password hint, or remote authentication (to bypass local authentication mechanisms) capability.</Guidance>
          <Tests>For each mechanism listed in the AGD guidance that provides a "Forgot Password" feature or other means where the local authentication process can be bypassed, the evaluator shall disable the feature and ensure that they are not able to bypass the local authentication process.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-wipeEntData">
         <text>wipe Enterprise data</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <NA ref="AO"/>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall attempt to wipe Enterprise data resident on the device according to the administrator guidance. The evaluator shall verify that the data is no longer accessible by the user.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-appCert">
         <text>approve<selectables><selectable id="fmt_smf.1.1_23">import</selectable><selectable id="fmt_smf.1.1_24">removal</selectable> </selectables>by applications of X.509v3 certificates in the Trust Anchor Database</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-appCert"/>must be included in the selection if the TSF allows applications, other than the MDM Agents, to import or remove X.509v3 certificates from the Trust Anchor Database. The MDM Agent is considered the administrator. This function does not apply to applications trusting a certificate for its own validations. The function only applies to situations where the application modifies the device-wide Trust Anchor Database, affecting the validations performed by the TSF for other applications. The user or administrator may be provided the ability to globally allow or deny any application requests in order to meet this requirement.</app-note>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS describes how approval for an application to perform the selected action (import, removal) with respect to certificates in the Trust Anchor Database is accomplished (e.g., a pop-up, policy setting, etc.).<htm:br/><htm:br/>The evaluator shall also verify that the API documentation provided according to <xref to="adv"/>includes any security functions (import, modification, or destruction of the Trust Anchor Database) allowed by applications.</TSS>
          <Guidance/>
          <Tests>The evaluator shall perform one of the following tests: <testlist><test>[conditional] If applications may import certificates to the Trust Anchor Database, the evaluator shall write, or the developer shall provide access to, an application that imports a certificate into the Trust Anchor Database. The evaluator shall verify that the TOE requires approval before allowing the application to import the certificate: <htm:li>The evaluator shall deny the approvals to verify that the application is not able to import the certificate. Failure of import shall be tested by attempting to validate a certificate that chains to the certificate whose import was attempted (as described in the evaluation activity for FIA_X509_EXT.1).</htm:li><htm:li>The evaluator shall repeat the test, allowing the approval to verify that the application is able to import the certificate and that validation occurs.</htm:li></test><test>[conditional] If applications may remove certificates in the Trust Anchor Database, the evaluator shall write, or the developer shall provide access to, an application that removes certificates from the Trust Anchor Database. The evaluator shall verify that the TOE requires approval before allowing the application to remove the certificate: <htm:li>The evaluator shall deny the approvals to verify that the application is not able to remove the certificate. Failure of removal shall be tested by attempting to validate a certificate that chains to the certificate whose removal was attempted (as described in the evaluation activity for FIA_X509_EXT.1).</htm:li></test></testlist>The evaluator shall repeat the test, allowing the approval to verify that the application is able to remove/modify the certificate and that validation no longer occurs.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-certValidity">
         <text>configure whether to allow or disallow establishment of a trusted channel if the TSF cannot establish a connection to determine the validity of a certificate</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-certValidity"/>must be included in the ST if "administrator-configured option" is selection in FIA_X509_EXT.2.2.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The test of this function is performed in conjunction with FIA_X509_EXT.2.2.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-cellular">
         <text>enable/disable the cellular protocols used to connect to cellular network base stations</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <aactivity>
          <TSS>The evaluator shall ensure that the TSS describes which cellular protocols can be disabled.</TSS>
          <Guidance>The evaluator shall confirm that the AGD guidance describes the procedure for disabling each cellular protocol identified in the TSS.</Guidance>
          <Tests>The evaluator shall attempt to disable each cellular protocol according to the administrator guidance. The evaluator shall attempt to connect the device to a cellular network and, using network analysis tools, verify that the device does not allow negotiation of the disabled protocols.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-auditLogs">
         <text>read audit logs kept by the TSF</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <NA ref="AO"/>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall attempt to read any device audit logs according to the administrator guidance and verify that the logs may be read. This test may be performed in conjunction with the evaluation activity of FAU_GEN.1.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-digSign">
         <text>configure<selectables><selectable id="fmt_smf.1.1_25">certificate</selectable><selectable id="fmt_smf.1.1_26">public-key</selectable> </selectables>used to validate digital signature on applications</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-digSign"/>should be included in the selection if FPT_TUD_EXT.5.1 is included in the ST and the configurable option is selected.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The test of this function is performed in conjunction with FPT_TUD_EXT.5.1.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-sharedKeys">
         <text>approve exceptions for shared use of keys or secrets by multiple applications</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-sharedKeys"/>should be included in the selection if user or administrator is selected in FCS_STG_EXT.1.4.</app-note>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS describes how the approval for exceptions for shared use of keys or secrets by multiple applications is accomplished (e.g., a pop-up, policy setting, etc.).</TSS>
          <Guidance/>
          <Tests>The test of this function is performed in conjunction with FCS_STG_EXT.1.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-keyWipeRules">
         <text>approve exceptions for destruction of keys or secrets by applications that did not import the key or secret</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-keyWipeRules"/>should be included in the selection if <xref to="s-killkey-user"/>or <xref to="s-killkey-admin"/>is selected in FCS_STG_EXT.1.5. <rule id="r-killkey-user-mf"><if><ref-id>s-killkey-user</ref-id></if><then><ref-id>mf-keyWipeRules</ref-id></then></rule> <rule id="r-killkey-admin-mf"><if><ref-id>s-killkey-admin</ref-id></if><then><ref-id>mf-keyWipeRules</ref-id></then></rule></app-note>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS describes how the approval for exceptions for destruction of keys or secrets by applications that did not import the key or secret is accomplished (e.g., a pop-up, policy setting, etc.).</TSS>
          <Guidance/>
          <Tests>The test of this function is performed in conjunction with FCS_STG_EXT.1.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-unlockBanner">
         <text>configure the unlock banner</text>
         <M ref="I"/>
         <NA ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note/>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS describes any restrictions in banner settings (e.g., character limitations).</TSS>
          <Guidance/>
          <Tests>The test of this function is performed in conjunction with FTA_TAB.1.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-auditItems">
         <text>configure the auditable items</text>
         <O ref="I"/>
         <NA ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <xref to="mf-auditItems"/>must be included in the selection if FAU_SEL.1 is included in the ST.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The test of this function is performed in conjunction with FAU_SEL.1.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-integ">
         <text>retrieve TSF-software integrity verification values</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The test of this function is performed in conjunction with FPT_NOT_EXT.2.1.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-USB">
         <text>enable/disable<selectables linebreak="yes"><selectable id="s-usbstore">USB mass storage mode</selectable><selectable id="fmt_smf.1.1_27">USB data transfer without user authentication</selectable><selectable id="fmt_smf.1.1_28">USB data transfer without authentication of the connecting system</selectable> </selectables></text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS includes a description of how data transfers can be managed over USB.</TSS>
          <Guidance/>
          <Tests>The evaluator shall perform the following tests based on the selections made in the table: <testlist><test>[conditional] The evaluator shall disable USB mass storage mode, attach the device to a computer, and verify that the computer cannot mount the TOE as a drive. The evaluator shall reboot the TOE and repeat this test with other supported auxiliary boot modes. </test><test>[conditional] The evaluator shall disable USB data transfer without user authentication, attach the device to a computer, and verify that the TOE requires user authentication before the computer can access TOE data. The evaluator shall reboot the TOE and repeat this test with other supported auxiliary boot modes. </test><test>[conditional] The evaluator shall disable USB data transfer without connecting system authentication, attach the device to a computer, and verify that the TOE requires connecting system authentication before the computer can access TOE data. The evaluator shall then connect the TOE to another computer and verify that the computer cannot access TOE data. The evaluator shall then connect the TOE to the original computer and verify that the computer can access TOE data. </test></testlist></Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-backup">
         <text>enable/disable backup of<selectables><selectable id="s-backup-all-apps">all applications</selectable><selectable id="s-backup-sel-apps">selected applications</selectable><selectable id="s-backup-sel-grps">selected groups of applications</selectable><selectable id="s-backup-cfg">configuration data</selectable> </selectables>to<selectables><selectable id="fmt_smf.1.1_29">locally connected system</selectable><selectable id="fmt_smf.1.1_30">remote system</selectable> </selectables></text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS includes a description of available backup methods that can be enabled/disabled. If "selected applications" or "selected groups of applications" are selected the TSS shall include which applications of groups of applications backup can be enabled/disabled.</TSS>
          <Guidance/>
          <Tests>If  is selected, the evaluator shall disable each selected backup location in turn and verify that the TOE cannot complete a backup. The evaluator shall then enable each selected backup location in turn and verify that the TOE can perform a backup.   If  is selected, the evaluator shall disable each selected backup location in turn and verify that for the selected application the TOE prevents backup from occurring. The evaluator shall then enable each selected backup location in turn and verify that for the selected application the TOE can perform a backup.   If  is selected, the evaluator shall disable each selected backup location in turn and verify that for a group of applications the TOE prevents the backup from occurring. The evaluator shall then enable each selected backup location in turn and verify for the group of application the TOE can perform a backup.   If  is selected, the evaluator shall disable each selected backup location in turn and verify that the TOE prevents the backup of configuration data from occurring. The evaluator shall then enable each selected backup location in turn and verify that the TOE can perform a backup of configuration data.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-hotspot">
         <text>enable/disable<selectables linebreak="yes"><selectable id="fmt_smf.1.1_31">Hotspot functionality authenticated by<selectables><selectable id="fmt_smf.1.1_32">pre-shared key</selectable><selectable id="fmt_smf.1.1_33">passcode</selectable><selectable id="fmt_smf.1.1_34" exclusive="yes">no authentication</selectable></selectables></selectable><selectable id="s-tether">USB tethering authenticated by<selectables><selectable id="fmt_smf.1.1_35">pre-shared key</selectable><selectable id="fmt_smf.1.1_36">passcode</selectable><selectable id="fmt_smf.1.1_37" exclusive="yes">no authentication</selectable></selectables></selectable> </selectables></text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>For function <xref to="mf-hotspot"/>, hotspot functionality refers to the condition in which the mobile device is serving as an access point to other devices, not the connection of the TOE to external hotspots.</app-note>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS includes a description of Hotspot functionality and USB tethering to include any authentication for these.</TSS>
          <Guidance/>
          <Tests>The evaluator shall perform the following tests based on the selections in Function  . <testlist><test>[conditional] The evaluator shall enable hotspot functionality with each of the of the support authentication methods. The evaluator shall connect to the hotspot with another device and verify that the hotspot functionality requires the configured authentication method. </test><test>[conditional] The evaluator shall enable USB tethering functionality with each of the of the support authentication methods. The evaluator shall connect to the TOE over USB with another device and verify that the tethering functionality requires the configured authentication method. </test></testlist></Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-dataSharing">
         <text>approve exceptions for sharing data between<selectables><selectable id="fmt_smf.1.1_38">applications</selectable><selectable id="fmt_smf.1.1_39">groups of applications</selectable> </selectables></text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Functions <xref to="mf-dataSharing"/>and <xref to="mf-appGroups"/>correspond to FDP_ACF_EXT.1.2.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The test of this function is performed in conjunction with FDP_ACF_EXT.1.2.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-appGroups">
         <text>place applications into application groups based on<assignable>enterprise configuration settings</assignable></text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall set a policy to cause a designated application to be placed into a particular application group. The evaluator shall then install the designated application and verify that it was placed into the correct group.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-unenroll">
         <text>unenroll the TOE from management</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>For function <xref to="mf-unenroll"/>, FMT_SMF_EXT.2.1 specifies actions to be performed when the TOE is unenrolled from management.</app-note>
         <aactivity>
          <TSS/>
          <Guidance/>
          <Tests>The evaluator shall attempt to unenroll the device from management and verify that the steps described in FMT_SMF_EXT.2.1 are performed. This test should be performed in conjunction with the FMT_SMF_EXT.2.1 evaluation activity.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-alwaysOnVPN">
         <text>enable/disable the Always On VPN protection:  <htm:ul><htm:li>Across device  </htm:li>  </htm:ul><selectables linebreak="yes"><selectable id="fmt_smf.1.1_41">on a per-app basis</selectable><selectable id="fmt_smf.1.1_42">on a per-group of applications processes basis</selectable><selectable id="fmt_smf.1.1_43" exclusive="yes">no other method</selectable> </selectables></text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <app-note>Function <_/>must be included in the ST if IPsec is selected in FTP_ITC_EXT.1 and the native IPsec VPN client can be configured to be Always-On. Always-On is defined as when the TOE has a network connection the VPN attempts to connect, all data leaving the device uses the VPN when the VPN is connected and no data leaves that device when the VPN is disconnected. The configuration of the VPN Client itself (with information such as VPN Gateway, certificates, and algorithms) is addressed by the <xref to="mod-vpnclient"/>.</app-note>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS contains guidance to configure the VPN as Always-On.</TSS>
          <Guidance/>
          <Tests>The evaluator shall configure the VPN as Always-On and perform the following tests: <testlist><test>The evaluator shall verify that when the VPN is connected all traffic is routed through the VPN. This test is performed in conjunction with FDP_IFC_EXT.1.1. </test><test>The evaluator shall verify that when the VPN is not established, that no traffic leaves the device. The evaluator shall ensure that the TOE has network connectivity and that the VPN is established. The evaluator shall use a packet sniffing tool to capture the traffic leaving the TOE. The evaluator shall disable the VPN connection on the server side. The evaluator shall perform actions with the device such as navigating to websites, using provided applications, and accessing other Internet resources and verify that no traffic leaves the device. </test><test>The evaluator shall verify that the TOE has network connectivity and that the VPN is established. The evaluator shall disable network connectivity (i.e. Airplane Mode) and verify that the VPN disconnects. The evaluator shall re-establish network connectivity and verify that the VPN automatically reconnects. </test></testlist></Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-bioRevoke">
         <text>revoke Biometric template</text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS describes the procedure to revoke a biometric credential stored on the TOE.</TSS>
          <Guidance/>
          <Tests>The evaluator shall configure the TOE to use BAF and confirm that the biometric can be used to authenticate to the device. The evaluator shall revoke the biometric credential’s ability to authenticate to the TOE and confirm that the same BAF cannot be used to authenticate to the device.</Tests>
         </aactivity>
        </management-function>
        <management-function id="mf-other">
         <text>
          <assignable>list of other management functions to be provided by the TSF</assignable>
         </text>
         <O ref="I"/>
         <O ref="U"/>
         <O ref="A"/>
         <O ref="AO"/>
         <aactivity>
          <TSS>The evaluator shall verify that the TSS describes all assigned security management functions and their intended behavior.</TSS>
          <Guidance/>
          <Tests>The evaluator shall design and perform tests to demonstrate that the function may be configured and that the intended behavior of the function is enacted by the TOE.</Tests>
         </aactivity>
        </management-function>
       </management-function-set>
      </title>
      <note role="application"><xref to="fmt_smf"/>compares the management functions required by this Protection Profile.<htm:br/><htm:br/>The first column lists the management functions identified in the PP.<htm:br/><htm:br/>In the following columns:<htm:ul><htm:li>‘M’ means Mandatory</htm:li><htm:li>‘O’ means Optional/Objective</htm:li><htm:li>'-' means that no value (M or O) can be assigned</htm:li></htm:ul><htm:br/><htm:br/>The third column ("Impl.") indicates whether the function is to be implemented. The ST author should select which Optional functions are implemented.<htm:br/><htm:br/>The fourth column ("User Only") indicates functions that are to be restricted to the user (i.e. not available to the administrator).<htm:br/><htm:br/>The fifth column ("Admin") indicates functions that are available to the administrator. The functions restricted to the user (column 4) cannot also be available to the administrator. Functions available to the administrator can still be available to the user, as long as the function is not restricted to the administrator (column 6). Thus, if the TOE must offer these functions to the administrator to perform, the fifth column must be selected.<htm:br/><htm:br/>The sixth column (FMT_MOF_EXT.1.2) indicates whether the function is to be restricted to the administrator when the device is enrolled and the administrator applies the indicated policy. If the function is restricted to the administrator the function is not available to the user. This does not prevent the user from modifying a setting to make the function stricter, but the user cannot undo the configuration enforced by the administrator.<htm:br/><htm:br/>The ST author may use a table in the ST, listing only those functions that are implemented. For functions that are mandatory, any sub-functions not in a selection are also mandatory and any assignments must contain at least one assigned value. For functions that are optional and contain an assignment or selection, at least one value must be assigned/selected to be included in the ST. For non-selectable sub-functions in an optional function, all sub-functions must be implemented in order for the function to be included. For functions with a "per-app basis" sub function and an assignment, the ST author must indicate which assigned features are manageable on a per-app basis and which are not by iterating the row.<htm:br/><htm:br/></note>
      <aactivity level="component">
       <TSS>The evaluator shall verify that the TSS describes all management functions, what roles can perform each function, and how these functions are (or can be) restricted to the roles identified by FMT_MOF_EXT.1.<htm:br/><htm:br/>The following activities are organized according to the function number in the table. These activities include TSS Evaluation Activities, AGD Evaluation Activities, and test activities.<htm:br/><htm:br/>Test activities specified below shall take place in the test environment described in the evaluation activity for FPT_TUD_EXT.1.<htm:br/><htm:br/></TSS>
       <Guidance>The evaluator shall consult the AGD guidance to perform each of the specified tests, iterating each test as necessary if both the user and administrator may perform the function. The evaluator shall verify that the AGD guidance describes how to perform each management function, including any configuration details. For each specified management function tested, the evaluator shall confirm that the underlying mechanism exhibits the configured setting.<htm:br/><htm:br/></Guidance>
       <Tests/>
      </aactivity>
     </f-element>
    </f-component>
    <!--FMT_SMF_EXT.2 Specification of Remediation Actions-->
    <f-component cc-id="fmt_smf_ext.2" id="fmt-smf-ext-2" name="Specification of Remediation Actions">
     <comp-lev> requires the TSF to automatically perform specific management functions in response to a specific event.</comp-lev>
     <management>The following actions could be considered for the management functions in FMT: Configuration of the functions that are performed in response to unenrollment event.</management>
     <audit>The following actions should be auditable if FAU_GEN Security audit data generation is included in the PP/ST: Initiation of unenrollment.Completion of unenrollment.</audit>
     <dependencies>No dependencies.</dependencies>
     <f-element id="fmt-smf-ext-acts">
      <title>The TSF shall offer<selectables><selectable id="s-smf-wipe-pro">wipe of protected data</selectable><selectable id="s-smf-wipe-sen">wipe of sensitive data</selectable><selectable id="s-smf-ext-2-rem-ent-app">remove Enterprise applications</selectable><selectable id="fmt_smf_ext.2.1_1">remove all device-stored Enterprise resource data</selectable><selectable id="fmt_smf_ext.2.1_2">remove Enterprise secondary authentication data</selectable><selectable id="fmt_smf_ext.2.1_4"><assignable>list other available remediation actions</assignable></selectable> </selectables>upon unenrollment and<selectables><selectable id="fmt_smf_ext.2.1_6"><assignable>other administrator-configured triggers</assignable></selectable><selectable id="fmt_smf_ext.2.1_7" exclusive="yes">no other triggers</selectable> </selectables>.</title>
      <note role="application">Unenrollment may consist of removing the MDM agent or removing the administrator’s policies. The functions in the selection are remediation actions that TOE may provide (perhaps via APIs) to the administrator (perhaps via an MDM agent) that may be performed upon unenrollment. "Enterprise applications" refers to applications that are in the Enterprise application group. "Enterprise resource data" refers to all stored Enterprise data and the separate resources that are available to the Enterprise application group, per FDP_ACF_EXT.2.1. If FDP_ACF_EXT.2.1 is included in the ST, then "remove all device-stored Enterprise resource data" must be selected, and is defined to be all resources selected in FDP_ACF_EXT.2.1. If FIA_UAU_EXT.4.1 is included in the ST, then "remove Enterprise secondary authentication data" must be selected. If FIA_UAU_EXT.4.1 is not included in the ST, then "remove Enterprise secondary authentication data" cannot be selected. Enterprise secondary authentication data only refers to any data stored on the TOE that is specifically used as part of a secondary authentication mechanism to authenticate access to Enterprise applications and shared resources. Material that is used for the TOE’s primary authentication mechanism or other purposes not related to authentication to or protection of Enterprise applications or shared resources should not be removed.<htm:br/><htm:br/>Protected data is all non-TSF data, including all user or enterprise data. Some or all of this data may be considered sensitive data as well. If <xref to="s-smf-wipe-pro"/>is selected it is assumed that the sensitive data is wiped as well. However, if <xref to="s-smf-wipe-sen"/>is selected, it does not imply that all non-TSF data (protected data) is wiped. If <xref to="s-smf-wipe-pro"/>or <xref to="s-smf-wipe-sen"/>is selected the wipe must be in accordance with FCS_CKM_EXT.5.1. Thus cryptographically wiping the device is an acceptable remediation action.</note>
      <aactivity level="component">
       <TSS>The evaluator shall verify that the TSS describes all available remediation actions, when they are available for use, and any other administrator-configured triggers. The evaluator shall verify that the TSS describes how the remediation actions are provided to the administrator.<htm:br/><htm:br/></TSS>
       <Guidance>There are no guidance evaluation activities for this component.<htm:br/><htm:br/></Guidance>
       <Tests/>
      </aactivity>
     </f-element>
    </f-component>
    <!--FMT_SMF_EXT.3 Current Administrator-->
    <f-component cc-id="fmt_smf_ext.3" id="fmt-smf-ext-3" name="Current Administrator" status="objective">
     <comp-lev> requires the TSF to provide users with a list of administrators and their specified functions.</comp-lev>
     <management>There are no management activities foreseen.</management>
     <audit>There are no auditable events foreseen.</audit>
     <dependencies>FMT_SMR.1 Security Roles</dependencies>
     <f-element id="fel-smf-curr-admin">
      <title>The TSF shall provide a mechanism that allows users to view a list of currently authorized administrators and the management functions that each administrator is authorized to perform.</title>
      <aactivity level="component">
       <TSS>There are no TSS evaluation activities for this component.<htm:br/><htm:br/></TSS>
       <Guidance>There are no guidance evaluation activities for this component.<htm:br/><htm:br/></Guidance>
       <Tests/>
      </aactivity>
     </f-element>
    </f-component>
   </section>
  </sec:SFRs>
  <!--5.2 Security Assurance Requirements-->
  &lt; title="Security Assurance Requirements"/&gt;
 </sec:req>
 <bibliography>
  <cc-entry/>
 </bibliography>
</PP>
